
//기존 배열은 이렇게 만들었다
jshell> int [] marks = {1,2,3};
marks ==> int[3] { 1, 2, 3 }
마크 배열을 생성했다

jshell> int [] marks2 = {1,2,3,4,5};
marks2 ==> int[5] { 1, 2, 3, 4, 5 }

jshell> int [] marks2 = {1};  //1개로도 해도되고
marks2 ==> int[1] { 1 }

jshell> int [] marks2 = {};  //값이 하나도 없어도 가능하다.
marks2 ==> int[0] {  }

//즉 배열안에는 아예 값이 없어도 되고 수없이 많은 값이 들어갈 수도 있다.

다음 해볼 건 배열 선언이다
marks2의 배열타입은 정수(int) 배열이였다 구문의 오른쪽에는 배열의 컨텐츠({1,2,3,4,5})가 들어가 있다
그래서 이 배열이 다섯개( {1,2,3,4,5} )의 요소를 포함하며 이러한 값을 가진다고 말할 수 있다.
배열 선언을 하는 쉬운 방법중 하나이다.

원래 이론상으로 배열을 선언하는 방법은 
int[] mark3 = new int[요소 개수]; 를 입력합니다.
====>
jshell> int[] marks3 = new int[5]; //해석해보면 다섯개의 값을 가지는 정수 배열을 생성하겠다고 입력하는 것이다. //int[] marks3 이부분이 배열 선언인대 mark3가 정수배열이라고 적혀있고 여기서( new int[5] )는 배열의 크기를 정의하고 있습니다.
marks3 ==> int[5] { 0, 0, 0, 0, 0 } //모든 값이 0으로 초기화된 것이 보이지?   
                               //이처럼 배열의 값을 지정하지 않으면 디폴트 값은 항상 0이다.
배열을 통해 특정 값에 접근할 수도 있다. 배열에서 숫자는 0부터 시작한다.
{ 0 ->인덱스0번 , 0->인덱스1번 , 0->인덱스2번 , 0->인덱스3번 , 0->인덱스4번 }

mark3의 0번째 값을 출력하면 특정 구문의 특정 인덱스에 해당하는 값을 추출하는게 된다
jshell> marks3[0]  =>[0] 대괄호에 들어가는 이부분이 인덱스 정보이다  //이 구문은 mark3라는 배열에 어떤 요소가 인덱스 0에 있는지 그값을 찾고 있는것이다.
$8 ==> 0

요소값을 변경할 수도 있다.
jshell> marks3[0] = 1;
$9 ==> 1

jshell> marks3[0]  //이렇게 인덱스0번이 변경된 것을 볼 수있다.
$10 ==> 10

jshell> marks3[2] = 3
$12 ==> 3

jshell> marks3[3] = 4
$13 ==> 4

jshell> marks3[4] = 5
$14 ==> 5

jshell> marks3
marks3 ==> int[5] { 1, 2, 3, 4, 5 } //marks3값을 출력하면 이렇게 배열의 모든 값이 보인다.

jshell> int[] marks2 = {1,2,3,4,5};  //배열을 이렇게 정의하는건 쉬운 방법이다. //원래처럼 다섯 개의 요소를 각각 정의하고 값을 입력하는 것을 대신할 새로운 방법인 것이다. 

다음 중요한 점은 배열의 길이이다
jshell> marks2.length  //중요한것은 length 이것은 속성이지 메소드가 아니다 //예를들어 String.length는 메소드이다 배열에서는 속성에 해당하는데 mark2의 길이 값은 5, 그냥 mark는 3이 출력이 됐다.
$19 ==> 5
jshell> marks.length
$20 ==> 3
jshell> marks3.length //그리고 marks3의 길이는 5다
$21 ==> 5       //5개의 값이 있다는 말이다.
//즉 mark는 여기 앞에 보면 3개의 요소가 있고 mark2는 다섯개의 요소가 있었다.
marks2 ==> int[5] { 1, 2, 3, 4, 5 }

/*
정리
여기선 배열을 생성하는 두가지 방법을 배웠다
쉬운 방법도 배우고 배열을 정의한 후 각가의 값을 부여하는 다소 복잡한 방법도 배웠다
배열요소는 인덱스 값을 이용해 특정 요소에 접근하는 방법을 비롯해
요소에 값을 부여하는 방법도 배웠다.
그리고 특정 배열에 얼마나 많은 요소가 있는지 알 수 있는 길이(length) 속성에 대해 알아 봤다
*/
