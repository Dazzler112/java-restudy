코딩 예제: 배열 역순으로 바꾸기

이번 과제에서 여러분의 목표는 Java 클래스 ArrayMagic안의 reverseArray(int[] array) 메서드를 완성하는 것입니다.
이 메서드는 정수로 된 배열을 받고, 입력된 배열이 담겨 있으나 순서가 역순인 배열을 리턴해야 합니다.

지침

여러분의 과제는 reverseArray메서드를 구현하는 것입니다. 그러려면 다음을 해야 합니다.

1. 포인터 2개를 정의합니다. 이름을 각각 start와 end라고 합니다. 
   start포인터는 배열의 첫 번째 요소를 지시해야 하고 end포인터는 마지막 요소를 지시해야 합니다.
2. 역순으로 된 요소들을 저장하기 위해 새로운 배열을 만듭니다. 그 배열을 reversedArray라고 할 수 있습니다.
3. 양쪽 끝(start및 end)에서 시작하여 중간으로 이동하면서 입력된 배열을 반복합니다.
• 입력된 배열의 end인덱스에서 요소를 reversedArray의 start인덱스에 복사해 넣습니다.
• 입력된 배열의 start 인덱스에서 요소를 복사하여 reversedArray의 end인덱스에 넣습니다.
• 배열의 끝을 향해start포인터를 한 단계 이동합니다.
• 배열의 시작을 향해 end포인터를 한 단계 이동합니다.

4. 입력된 배열의 모든 요소가 처리되면 reversedArray에는 입력된 배열의 요소들이 역순으로 담겨 있을 것입니다. 
   이때 메서드는 reversedArray를 리턴해야 합니다.

엣지 케이스

reversedArray 메서드는 몇 가지 엣지 케이스를 처리할 수 있어야 합니다.

입력된 배열이 비어 있으면(즉 배열의 길이가 0이면) 메서드는 빈 배열을 리턴해야 합니다.

입력된 배열에 요소가 하나뿐이면 메서드는 다시 그 배열을 리턴해야 합니다.

예시

그럼 몇 가지 예를 통해 reversedArray메서드가 어떻게 작동해야 하는지 보여 드리겠습니다.

예 1:
입력: [1, 2, 3, 4]
출력: [4, 3, 2, 1]
설명: 입력된 배열에 4개의 요소가 있습니다. 역순 배열에는 그 요소들이 역순으로 담겨 있어야 합니다.

예 2:
입력: [5, -10, 15, -20]
출력: [-20, 15, -10, 5]
설명: 입력된 배열에는 양수와 음수가 포함된 4개의 요소가 있습니다. 역순 배열에는 그 요소들이 역순으로 담겨 있어야 합니다.

예 3:
입력: [100, 200, 300, 400, 500]
출력: [500, 400, 300, 200, 100]
설명: 입력된 배열에는 5개의 요소가 있습니다. 역순 배열에는 그 요소들이 역순으로 담겨 있어야 합니다.

그럼 행운을 빕니다!


해당은 기본 로직입니다.
public class ArrayMagic {

    /**
     * This method reverses an array.
     * 
     * @param array the array to reverse
     * @return a new array with elements in reverse order
     */
    public int[] reverseArray(int[] array) {

        // TODO: Write your code here
    }
}

다음 코드를 이용하여 코드를 완성하시오.













-----------------------------------------------------------------------------











힌트)












과제 해결을 돕기 위해 몇 가지 힌트를 드립니다.

1. 포인터 초기화: 2개의 포인터, 즉 start와 end를 초기화합니다. 
   start는 배열의 시작 부분을 지시해야 하고 end는 끝부분을 지시해야 합니다.

2. 새로운 배열: 역순으로 된 요소를 담기 위해 입력된 배열과 길이가 같은 새로운 배열인 reversedArray를 만듭니다.

3. 배열 반복: while 반복문을 사용하여 배열을 반복합니다. 
   반복은 start가 end보다 작거나 같을 때까지 계속되어야 합니다.

4. 요소 교환하기: 반복문에서 매번 반복할 때마다 입력된 배열의 end요소를 
   reversedArray의 start인덱스에 복사하고 입력된 배열의 
   start 요소를 reversedArray의 end 인덱스에 복사합니다.

5. 포인터 업데이트: 요소들을 교환한 후에 start포인터를 증가시키고 end포인터를 감소시킵니다.

6. 결과 리턴하기: while 반복문이 완료된 후에는 
   입력된 배열의 모든 요소가 역순으로 reversedArray에 배치되었을 것입니다. 
   reversedArray를 리턴합니다.

7. 엣지 케이스도 고려하는 걸 잊지 마시기 바랍니다. 
   만일 입력된 배열이 비어 있거나 요소가 하나뿐이라면 역순으로 만들 요소가 없으므로 
   메서드는 입력된 배열과 동일한 새로운 배열을 리턴해야 합니다.



-----------------------------------------------------------------------------






















-----------------------------------------------------------------------------
















해답)


















public class ArrayMagic {

    public int[] reverseArray(int[] array) {
      //에지케이스 먼저 작성
        if(array.length <= 1) {
            return array;
        }
        //배열 요소가 두개 이상 포함되면 로직 작성해야함
        //배열에 4개의 요소가 포함되어 있고 요소가 1,2,3,4라 가정해 보자
        //이를 역으로 표현하는 방법은 실제로 양쪽 긑에 포인터를 갖는 것이다.
        //start라는 포인터와 end라는 포인터가 있을수 있다.
        //start는 0에서 시작하는 특정 인덱스를 가리키는것이다(0,1,2,3) 
        //end는 마지막 3이라는(0,1,2,3중 3) 인덱스의 대한 끝포인터를 갖게된다
        //그리고 할 일은 이것들을 교환하는 것이다. 처음과 끝부분을 교환 4,2,3,1 다음으로 2번으로 움직여 2와 3을 바꾼다 4,3,2,1
        //이를 확인하는 방법은 실제로 시작을 충분히 증가시키고 끝을 감소시키면 시작이 끝보다 커진다는 것이다. 시작이 끝보다 크면 루프를 종료해야 한다. 곧 그말은 배열을 반전시켰다는 것을 의미한다.
        int start = 0;  시작변수
        int end = array.length - 1;   끝변수

        int[] reversedArray = new int[array.length]; 배열의 길이는 배열 도트 길이가 되어야 하므로 길이와 같아야한다.
        while(start <= end) { //시작변수가 끝변수보다 작을 때 (array를 반전시키고싶다)
            reversedArray[start] = array[end];
            reversedArray[end] = array[start];
            start++;
            end--;
        }
        return reversedArray; //반전된 배열을 다시 반환
    }
}

-----------------------------------------------------------------------------
