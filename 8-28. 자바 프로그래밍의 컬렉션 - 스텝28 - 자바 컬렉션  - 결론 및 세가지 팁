
                          Collections
                             •List
                             •Set
                             •Queue
                             •Map


이 부분에선, 여러가지 다른 Collection에 관해 깊게 알아보았다
- 중복된 요소들의 리스트를 저장할 수 있는 List로 시작했다
- 그다음 중복을 허용하지 않는 Set에 대해 이야기해 보았고
- 그리고 순서가 정해지고 모든 요소가 한번만 처리되는 Queue에 대해 알아보았고
- 열쇠 - 값 쌍을 저장하는데 쓰이는 Map또한 알아 보았다

또한 내부에서 어떻게 데이터가 존재하는지를 알이위해 기저에 있는 데이터 구조에 대해서도 보았다 


이제 몇 가지 팁을 보자

1. 첫번째 팁은 Hash이다, 언제나 너가 어떤 Collection의 이름에서 'Hash'를 보게 되면 
   순서도 없고 정렬도 되어 있지 않다는 것을 기억해라
   
   즉, 기본적으로, 해시테이블-기반 Collection은 언제나 순서도 정렬도 없다, 삽입 순서도 정렬 순서도
   유지되지 않는다는 것이다

2. 다음 팁은 Linked이다 'Linked'를 보게되면 요소들이 서로 연결되어 있다는 것이다
   LinkedList를 쓸 수 있다 이중 LinkedList일 수도 있다 
   전 요소와 후 요소들과 연결이 있다는 것이다 
   LinkedList를 쓴다면 순서는 확실히 유지된다
   데이터를 정렬된 방식으로 저장하진 않지만 삽입 순서대로 데이터를 저장한다

3. 세번째 팁은 'Tree'란 키워드이다
   'Tree'란 키워드는 데이터가 트리 구조에 정렬된 상태로 저장된다는 것이다
   즉 언제든지 'Tree'란 키워드가 보이면, 너는 데이터가 정렬된 순서로 저장된다는 것을 알 수 있을 것이다

4. 그리고 추가로 네번째 팁은, 너가 언제든지 tree으르 보게 되면, 기본적으로, 데이터가 정렬되어 있기 때문에,
   NavigableSet이나 NavigableMap 구현이 있을 거라는 것이다, 즉,TreeSet은 NavigableSet을 구현하고 
   TreeMap은 NavigableMap을 구현하는 것이다 
   트리셋과 트리맵 하위 셋을 Collection의 종류에 따라 열쇠나 값을 이용해 하위 Set을 만들 수 있는 추가적인 
   작업들도 있다


이 팁들을 기억하면 확실히 모든 Collection들을 잘 기억할 것이다
