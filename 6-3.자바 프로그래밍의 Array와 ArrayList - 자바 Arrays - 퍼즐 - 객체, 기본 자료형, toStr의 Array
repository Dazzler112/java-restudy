
8개의 요소를 가지는 마크 배열을 생성해 보시오
jshell> int[] marks = {1,2,3,4,5,6,7,8};
marks ==> int[8] { 1, 2, 3, 4, 5, 6, 7, 8 }
//이 배열의 길이를 확인할 건데 어떻게 확인 했었지?
jshell> marks.length  //길이 속성을 사용 했었다.
$28 ==> 8
//이 연습문제는 배열에 marks.length 속성을 이용해 반복문을 넣는 것이었다.

어떤 코드를 입력하면 될까?
jshell> for(int i = 0; i < marks.length; i++) {
   ...>     System.out.println(marks[i]); //배열을 출력하려면 어떻게 해야했을까? marks라는 변수명에 []대문자쓰고 i의 값을 넣어주면 출력된다.
   ...> }
1
2
3
4
5
6
7
8
//출력이 됐다

배열의 초기화에 대해 알아보자
jshell> int[] marks = new int[5]; //배열에 생성되는 초기값은 몇일까? 생각해 보자
marks ==> int[5] { 0, 0, 0, 0, 0 } // 배열에 부여되는 초기값은 0이다

jshell> double[] values = new double[5];  //double을 구할때도 마찬가지이다 //초기값이 무엇일까 생각해보자 몇일까?
values ==> double[5] { 0.0, 0.0, 0.0, 0.0, 0.0 } //초기값은 0.0이다
//모든 정수타입 초기값은 0이고, 모든 double타입의 초기값은 0.0이다.

boolean의 경우 초기값은 'false'이다.
jshell> boolean[] test = new boolean[5];
test ==> boolean[5] { false, false, false, false, false }

마지막으로 객체를 요소로 하는 배열도 만들 수 있다.
예를 들어 'Person'이라는 클래스가 있다고 할 때 

jshell> class Person {
   ...> }
|  created class Person
아무것도 없는 클래스를 만들었다 'Person'라는 클래스도 만들 수 있다.
jshell> Person[] persons = new Person[5]; //앞에서 double,int를 사용했던 구문과 완벽하게 똑같은데 'person'부분만 새로운 person이다 //객체의 배열을 만들 경우 디폴트 값은 null이다
persons ==> Person[5] { null, null, null, null, null } //요소값이 가리키는 객체가 없다 값이 null로 나왔다. //초기 디폴트 값은 null이다

다음 퍼즐

jshell> int [5] marks;  //배열을 하나 선언했고([5]) 이배열은 다섯개의 요소를 가지고 있다. //이렇게 하면 배열이 생성이 될까?
|  Error:
|  ']' expected
|  int [5] marks;
|       ^
불가능 하다 배열을 선언할 때에, 선언하는 쪽, 구문의 왼쪽에는 요소의 개수가 올수 없다

값을 정의하는 오른쪽에 보통 {new int[5]} 와 같이 얼마나 많은 요소들이 있는지의 값을 넣을수 있다
jshell> int[] marks = new int[]; //이건 배열을 생성 할 수 있을까? //구성 요소의 수를 모른채로 배열을 정의 할 수 있을까?
|  Error:
|  array dimension missing
|  int[] marks = new int[];
|                ^-------^
배열의 규모를 알 수 없기 때문에 안된다.
❗그렇기 때문에 배열의 사이즈는 항상 정의하는 ,즉 오른쪽에 있어야한다 그리고 왼쪽은 공란이어야 한다
기억해야 하는 부분중 하나이다!❗

jshell> int[] marks = new int[5];
marks ==> int[5] { 0, 0, 0, 0, 0 }
----> 이런 식으로 배열을 정의하고 선언하는 것이다.

이배열 요소가 다섯 개인데, 여섯번째 요소에 접근하려고 하면 어떻게 되나?
jshell> marks[6];
|  Exception java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 5
|        at (#37:1)
오류 메시지가 나온다 배열의 범위 밖에 값에 접근하려고 하는것이다.

배열의 또 다른 중요한 점은, 배열에서는 이 명시된 타입의 값만 가질수 있다.
무슨말일까?
1,2,3 같은 값만 가진다는 것이다.
jshell> int[] marks = {1,2,3,4.0}
|  Error:
|  incompatible types: possible lossy conversion from double to int
|  int[] marks = {1,2,3,4.0};
|                       ^-^
만약 4.0을입력하면, 오류가 뜬다 4.0은 정수가 아니기 때문에 이곳에 저장할 수 없다고 나온다.
정수 배열에서는 정수타입만 저장할 수 있다.

Person배열에서는 person타입만 올 수 있다.

마지막으로 볼건 배열의 전체 값을 출력하는 방법이다
만약 marks 값을 출력하고 싶다면 모든 출력값을 출력하고 싶다면 어떻게 해야할까?

마크 배열부터 재정의 해보자
jshell> int[] marks = {1,2,3,4,5}
marks ==> int[5] { 1, 2, 3, 4, 5 }

syso을 통해서 전체 콘텐츠를 출력하려고 한다.
정의 값으로 marks를 출력하면

jshell> System.out.println(marks);
[I@1c6b6478  //어떤게 보이냐? 저장 경로가 출력된다 
그래서 만약 syso을 통해 콘텐츠를 출력하고 싶을 경우 , 배열 클래스에서
스태틱 메소드를 사용하는것이다 한번 이렇게 입력해보자
jshell> System.out.println(Arrays.toString(marks));
[1, 2, 3, 4, 5]
//이렇게 하면 이걸 사용해서도 배열의 콘텐츠를 출력할 수 있다.
대부분의 경우 이게 우리가 코드를 사용하는 이유이다 특정 배열에 존재하는 콘텐츠를 찾기 위해서이다

//정리하면, Arrays.toString()을 통해 스ㅡ링 representation을 알 수 있고
그걸 결과값으로 출력할 수 있다.
Arrays.toString은 가능하다면 기억해 두자

/*
최종정리
배열에 저장되는 디폴트 값에 대해 먼저 살펴봤다 정수타입은0, floating타입은 0.0,
boolean타입은 'false' 또 객체 타입은 null이라는 디폴트 값을 기지고 있다
그다음 배열의 선언과 정의에 대해 배웠는데 선언하는 쪽에서 배열의 사이즈값을 넣을수 없고
정의하는 쪽에서는 반드시 사이즈 값을 넣어야 했다.
배열에 존재하는 인덱스 범위외의 값을 출력시도할 경우 'ArrayIndexOutofBoundsException'이라는 
오류 메시지가 뜬다는것도 배웠다
또 배열에서 특정타입의 값만 올 수 있었다 정수 배열 안에 float타입 값을 넣는다면, 오류가 발생한다.
마지막으로 Arrays.toString을 이용해 배열의 콘텐츠를 불러오는 방법을 배웠다.
*/
