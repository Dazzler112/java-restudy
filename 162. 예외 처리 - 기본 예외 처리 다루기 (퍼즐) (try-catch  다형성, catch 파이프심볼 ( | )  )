

이번 영상에선 예외를 처리하는 것에 대한 몇가지 퍼즐을 풀어보도록 하겠다

1.
try {
  AmountAdder.addAmounts(new Amount("RUPEE", 5),
              new Amount("RUPEE", 5));
  String string = null;
  string.toString();
} catch (CurrenciesDoNotMatchException e) {
  System.out.println("Handled CurrenciesDoNotMatchException");
}

만약에 메소드가 다음과 같은 코드로 이루어져 있고
NullpointerException을 던져준다면 어떤 결과가 나올까?

설명해 보자면, 우선 이 코드가 main 메소드 안의 코드라고 해보자
이 메소드 안에서 예외는 제대로 처리가 될까? 맞다
너기 대답한 대로, 이 코드에선 예외의 처리가 제대로 이루어지지 않을 것이다 
이유는 여기에서 다루는 내용은 CurrenciesDoNotMatchException으로, NullPointerException에 관한 내용을 다루고 있지 않다
그러므로 이 catch문단은 맞지 않을 것이고, 예외는 떠넘겨지게 될 것이다
그리고 만약 다른 메소드가 이를 부른다면, 예외는 chain의 위쪽으로 던저지게 되겠지



이번에는 이 퍼즐을 봐달라 이 코드는 컴파일이 될까?
2.
try {
  AmountAdder.addAmounts(new Amount("RUPEE", 5),
              new Amount("USD", 5));
  String string = null;
  string.toString();
} catch (Exception e) {
  System.out.println("Handled Exception");
} catch (CurrenciesDoNotMatchException e) {
  System.out.println("Handled CurrenciesDoNotMatchException");
}
너에게 이미 힌드를 줬다 ㅇㅋ 
정답은, '컴파일 되지 않는다' 이다
CurrenciesDoNotMatchException은 Exception의 자식 클래스에 해당한다
그러므로 이 catch 문단은 계급이라는 것이 존재하여 자식 클래스부터 슈퍼 클래스까지 올라가겠지
그러므로 계급은 CurrenciesDoNotMatchException Exception부터 
그다음은 RuntimeException, 그리고 Exception이 된다 그러므로 만약 RuntimeException이 없다면, CurrenciesDoNotMatchException을 먼저 지나가고,
그리고 나서 Exception의 문단의 순서가 오게 될 것이다 그러므로 이 문단들의 순서가 올바르지 않다


3.
try {
  //code
} catch (IOException | SQLException ex ) {
  ex.printStackTrace();
}

정확히 말하면 이 문제는 퍼즐이라기보다는 자바 7에서 새로 소개된 기능 중 하나이다
자바 7에서는 한 문단 안에서 두 개 이상의 예외를 정의할 수 있다
IOException과 SQLException을 같은 문단안에서 함께 다룰 건데, 단지 pipe symbol( | )을 이용해 주기만 하면 끝이다
ex 이 변수에 부여할 이름을 적어주면 된다

이게 이 예외들을 다루기 위해 익혀야 할 단계의 전부이다 



/*
정리)
이번 학습에선 예외 처리와 관련된 몇 개의 간단한 퍼즐을 풀어보았다 
*/
