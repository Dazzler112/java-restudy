
이번 학습은 기본적인 집합 인터페이스인 List에 대해 알아볼 것이다
저번 부분에선 List에 대해 봤었다, 이것은 우리가 Lsit와 ArrayList에 대해 우리가 배운 것들에 대한 빠른 복습이다.

우리가 이야기하고 있는 아무 인터페이스에 대한 문헌을 찾고 싶으면 자바 9를 치고 이름을 입력하면 된다 
자바 9를 치고 List를 누르면 이렇게 나온다 
언제나 자바의 최신 문헌을 따져라 왜냐하면 버전들마다 매우 큰 변화들이 있을수 있기 때문이다
지금 볼 것은 자바9이다 자바 SE 9의 List 페이지로 가면 List 인터페이스에 관한 많은 정보를 볼 수 있을것이다.
약간 아래쪽으로 내려보면, List 인터페이스에 관한 여러 중요한 문헌을 볼 수 있다.

여기서 중요한 선언은 이것은 ❗ 순서가 있는 집합 ❗ 이란 것이다.
이것은 List의 어느 요소가 어디에 삽입되는지를 정밀하게 제어할 수 있다는 것이다.
어떤 의미일까? 이것은 너가 직접 특정 위치에 요소들을 삽입할 수 있다는 뜻이다.
특정 위치에 어떤 요소를 삽입하고 싶다고 해보자 특정한 위치에서 요소들을 가져올 수 있다

또 다른 중요한 것은 List는 보통 ❗ 중복된 요소들을 허용 ❗ 하고 List의 요소들의 위치값에 접근할 수 있는 네 가지 메소드들을 제공한다.

문헌에 들어가서 읽는것을 추천한다 
List 상위 인터페이스들이 무엇인지 배울 수 있다 그게 기본적으로 List가 연장하는 인터페이스들이다
하위 인터페이스들 및 어떤 인터페이스들이 List를 연장하는지도 알 수 있다.
또 구현 클래스들이 무엇인지도 알수 있다 그래서, List 인터페이스를 구현하는 클래스들이 무엇일까

List 인터페이스와 다른 인터페이스에서 상속받아 존재하는 여러가지 메소드들에 대한 세부정보를 찾을 수도 있다


List 인터페이스의 중요한 요약
• List 인터페이스에 대해 제일 중요한 것은 이것은 정말 어느 위치에 어떤 객체가 있는지를 신경쓴다는 점이다
• 너는 어떤 위치를 특정함으로써 요소들을 추가할 수 있다, 
  6번째 위치에 요소를 추가하고 싶다고 치자
  10번째 위치에도 요소를 추가할 수 있다
• 위치 특정 없이도 요소들을 추가할 수 있다, 이경우에는 끝에 추가되겠다


간단한 List를 하나 만들고 싶다고 치자 ,문자열 값을 저장할 수 있는 리스트를 만들고 싶다.. 어떻게 해야할까?
List<String> <>는 제너릭이라는 표현이다  이 리스트는 문자열 값을 저장하고 
이제 이것에 부여를 하고싶은 것이 단어들의 리스트를 가지고 논다고 해보자 그러면 새 리스트를 만들고 싶겠지?
자바 9에서 가장 쉽게 리스트를 만들수 있는 방법은 List.of()이다.
.of()는 리스트 인터페이스 안에 존재하는 정적 메소드이다 그래서, 이것을 이용해서  "Apple", "Bat", "Cat" 을 입력할 것이다.
List<String> words = List.of("Apple", "Bat", "Cat"); -> 이것이 특정 요소들을 가지고 리스트를 초기화할 수 있는 제일 쉬운 방법이다

jshell> List<String> words = List.of("Apple", "Bat", "Cat");
words ==> [Apple, Bat, Cat]
우리는 of()라는 정적 메소드를 사용하는 것이다, List.of("Apple", "Bat", "Cat")
옛버전에는 이렇게 간단한 작업이 불가능했다 ArrayList를 생성하고 각자 요소들을 하나하나 추가하거나 
배열을 만들고 그다음 ArrayList로 변환하려 시도해야 했었다
이것이 자바9에서 제공하는 꿀기능 중 하나이다

이제 이 단어들에서 모든 세부정보를 얻을 수 있겠지?
여기서 안에 단어들이 몇개가 있는지 알고 싶다면 size()를 사용한다
jshell> words.size();
$2 ==> 3
Size는 이 집합 속에 몇개의 요소들이 있는지 알아내는 데 쓰인다

그리고 또 비어있는지 알아내는 메소드도 있다
이 리스트는 비어있나?
jshell> words.isEmpty();
$3 ==> false
비어있지 않아서 거짓이 출력된다.

또한 특정 인덱스에 있는 요소를 가져올 수도 있다,
words.get(0)을 수행한다고 하면
jshell> words.get(0);
$4 ==> "Apple"
"Apple" 이렇게 해서 리스트의 특정 요소에 접근할 수 있다.

이제 이 요소가 이 리스트안에 존재하는지 알아보고 싶다..
contains()란 메소드를 사용할 수 있다

jshell> words.contains("Dog");
$5 ==> false
words.contains("Dog");는 "Dog"를 포함하고 있냐? 라는 것이다 답은 아니오
캣은?
jshell> words.contains("Cat");
$6 ==> true
ㅇㅇ

"Cat"이 어디에 위치하는지 알고 싶다면 indexOf("Cat")이라 하면 된다
jshell> words.indexOf("Cat");
$7 ==> 2
Cat이 어디에 있는지 찾으려고 하는것다 2번에 있다고 하는데 맞을까?

jshell> words
words ==> [Apple, Bat, Cat]
            0      1     2
그래서 "Cat"의 인덱스는 2가 맞다

만약 이안에 존재하지 않는 것의 인덱스를 찾으려 한다면, 무엇을 출력할까?
jshell> words.indexOf("Dog");
$9 ==> -1
-1, 그래서 -1이 출력될때는 단어가 리스트 안에 없다는 것을 의미한다



/*
정리)
이 학습에서, 리스트 인터페이스를 만듦으로써 시작하고 
리스트 안의 여러 다른 메소드들을 이용해 리스트 안에 있는 것들에 대한 정보를 가져올 수 있었다
*/
