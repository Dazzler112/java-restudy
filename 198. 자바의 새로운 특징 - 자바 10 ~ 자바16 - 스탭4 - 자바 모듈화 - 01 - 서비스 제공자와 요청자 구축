

이번 시간에는 우선 jar나 모듈화를 신경쓰지 말고 간단한 어플리케이션을 구축해보자
그다음 단계에서 만든 것을 몇 개의 jar로 쪼갤 것이다 그리고 나면 모듈화를 이용해서 어떤 차이점이 생기는지 알아보자

modularization_1_combined라는 프로젝트를 만들고 이제 아주 간단한 프로그램을 하나 만들어보자 
정렬 알고리즘을 사용할 건데 이 알고리즘을 사용해보려면 뭔갈 하나 빨리 만들어봐야겠다 새 클래스 생성
MySortingUtil라는 이름으로 생성하고 com.in28minutes.sorting.util 패키지 안에 넣어주겠다

MySortingUtil에 들어가서,

------------------------------------------------------------------------------------------------------------


⏺ MySortingUtil 클래스파일



package com.in28minutes.sorting.util;

import java.util.*;

public class MySortingUtil {

  //1: public List를 적고, List뒤에 sort()를 넣고, 인풋으로 여기에도 List를 넣어보자 names(이름) 목록을 인풋으로 갖게 되었고 이제 정렬 리스트의 반환값을 만들어보자 //1-1: 아래에 작성
	public List<String> sort(List<String> names) {
      //1-1: 이제 이름들을 원래대로 반환할 것이다 , 
      //간단하다, 이제부터 여기에 이름을 반환하는 대신 특정 알고리즘을 활용해보려고 한다 활용할 알고리즘의 이름을 BubbleSort라고 하고 다른 파일에서 실행된다고 해 보자
      //BubbleSort bubbleSort = new BubbleSort()를 적어주고, 그다음 bubbleSort.srot() 한 다음 여기에 names(이름)을 전달하겠다 
		  BubbleSort bubbleSort = new BubbleSort();  
      
      //1-2: 그리고 여기다가 이걸 곧장 다시 반환받는다고 하자
		  return bubbleSort.sort(names);

      //1-3:버블소트 클래스 부분은 존재하지 않기 때문에 버블소트에서 퀵소트나 사용하려는 다른 알고리즘으로 유연하게 전환할 수 있게 됐다
      //이제 한단계 나아가서 버블소트 클래스를 만들어보겠다 BubbleSort bubbleSort = new BubbleSort()부분에 ctrl+1누르고 > Create Class 'BubbleSort' 클릭 패키지는 sorting.algorithm으로 (패키지 이름은 아주 중요하기 때문에 교육자가 사용하는 것과 똑같이 쓰는 걸 추천)
      //패키지는 com.in28minutes.sorting.algorithm, 제목은 BubbleSort이다, 생성! 
      //클래스가 만들어졌고 그리고 메소드도 만들어줄 건데 return bubbleSort.sort(names)에서 sort(names)부분 ctrl+1누르고 만어주자 //2: BubbleSort클래스 파일로...  
	}
}

-----------------------------------------------------------------


⏺ BubbleSort 클래스파일



package com.in28minutes.sorting.algorithm;

import java.util.*;

public class BubbleSort {

	public List<String> sort(List<String> names) {
		
    // 2: 그리고 이름을 원래대로 반환한다고 하겠다 지금은 아무것도 하지 않고 있지만 이름을 정렬하고 목록을 반환하기 위해 버블소트 클래스를 사용하는 정렬 유틸리티가 만들어진 것이다
		//그리고 이 API를 사용할 사람에게 테스트할 게 있어야겠지? 니가 만든 정렬 유틸을 노출되는 API로 해보자 이러면 컨슈머가 알아야겠지? 그러므로 이걸 위한 클래스를 만들어주자
    //이걸 쓰는 사람은 MySortingUtilConsumer라고 하겠다 com.in28minutes.consumer 패키지에 아웃풋한다 //
	}

}

-----------------------------------------------------------------




이번 강의에선 모듈화를 시작할 때 필요한 것을 준비했다 

