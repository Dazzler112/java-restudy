예시 

클래스파일 1.------------------------------------------------------------------------------------------------------
package onlineJavaStudy;

public class MotorBike {
	//state
	int speed;  // 4. 인스턴스 변수를 선언하여
	
	//behaviour
	
	void start() {  //2. 스타트 메소드를 생성
		System.out.println("Bike Started");
	}
}
------------------------------------------------------------------------------------------------------------------


클래스파일 2.------------------------------------------------------------------------------------------------------
package onlineJavaStudy;

public class MotorBikeRunner {
	public static void main(String[] args) {
		MotorBike ducati = new MotorBike();  // 1. MotorBike 클래스의 인스턴스를 생성
		MotorBike honda = new MotorBike();
		
		ducati.start();  //3. 생성한 인스턴스의 메소드를 사용
		honda.start();
		
		ducati.speed = 100;  //5.인스턴스 클래스의 변수명을 이용하여 MortorBike의 값을 다르게 초기화 해줄수 있다
		honda.speed = 80;
		
		ducati.speed = 20;
		honda.speed = 0;
	}
}
------------------------------------------------------------------------------------------------------------------

•메모리에서
        ducati                    honda
  ------------------      ------------------
  speed   |  xxx           speed   |  xxx

 •메모리에선 저렇게 인스턴스 변수값을 다르게 해주면 그값을 메모리에 저장하고 
 •인스턴스 클래스 변수명에따라 다른 값을 다른 메모리에 저장한다



하지만 이 예제의 문제점이 있다 
MotorBike 클래스의 문제점은 MotorBikeRunner 클래스가 직접적으로 MotorBike 클래스의 인스턴스 변수에 접근할수 있다는것
MotorBikeRunner의 별개의 클래스이기 때문에 좋지않음(또하나의 독립적인 클래스이기 때문)
Encapsulation을 파괴하는 행위
⁘정리하자면 클래스는 특정 클래스의 데이터를 직접적으로 바꿀수 없고 상태를 바꾸고자 한다면 
해당 클래스에서 수행하는 메서드를 통해야 한다.
(캡슐화의 기본원칙중 하나이고 캡슐화는 특정 데이터에 접근해 값을 설정하는 데이터와 메서드이다.)
데이터 제어는 해당 데이터의 메서드를 거쳐야 하는데 어떠한 방법이 있을까? 3번파일로 계속
