
자바 8에서 API관련해 지속적으로 발생하는 문제중 하나가 날짜 적용과 관련된 사항이었다
,자바는 이부분에서 좋은 API 성능을 가지고 있지 않다.
그러다 자바 8에 와서 새로운 환경이 도입이 되었다
이 새로 구현된 기능은 'Joda FrameWork' 라는 것에 기반을 둔 것인데 ,
이게 기존 자바 API를 대체하기로 굉장히 유명했고 자바8이 실제로 여기서 몇몇 중요한 개념을 자져와서 
자바 API에도 적용을 한 바 있다.

이렇게 8버전에서 새롭게 도입된 API를 사용해서 날짜 데이터 타입 관련해서 배워보도록 하자

자바8은 세가지 가장 중요한 클래스를 도입했다.
❗ LocalDate, LocalDateTime, LocalTime ❗ 이 있다. 
이 세 클래스로 인해 날짜와 시간을 다루는 게 굉장히 쉬워졌다.
이 세 가지가 각각 어떻게 다를까?

'Date'는 날짜 값을 가지고 있다. (ex)2023년 12월 02일 같이) 'LocalDate'는 이처럼 날짜를 나타낸다
'LocalTime'은 시간 값을 나타낸다 (ex)17:08와 같이)값을 나타낼수 있다.
'LocalDateTime' 날짜와 시간 값을 모두 가진다. (ex)2023년 12월 10일 오후 17:09 이렇게) 출력할 수있다.

이제 각 API를 살펴 보자

-LocalDate

jshell> LocalDate now = LocalDate.now();
|  Error:
|  cannot find symbol
|    symbol:   class LocalDate
|  LocalDate now = LocalDate.now();
|  ^-------^
|  Error:
|  cannot find symbol
|    symbol:   variable LocalDate
|  LocalDate now = LocalDate.now();
|                  ^-------^
=>왜 실행 되지 않을까? 
LocalDate는 'Java.time'이라는 패키지 안에 포함되는데 'Jshell'은 몇 가지 디폴트 입력값을 제공하고있다.

jshell> /import
|    import java.io.*
|    import java.math.*
|    import java.net.*
|    import java.nio.file.*
|    import java.util.*
|    import java.util.concurrent.*
|    import java.util.function.*
|    import java.util.prefs.*
|    import java.util.regex.*
|    import java.util.stream.*
//time을 import 해줘야 한다.

jshell> import java.time.*

jshell> LocalDate now = LocalDate.now()
now ==> 2023-12-02  //해당 인스턴스가 생성되어 있는 게 보인다.

jshell> LocalDateTime now = LocalDateTime.now()
now ==> 2023-12-02T17:15:01.094531
//차이점이라면 LocalDateTime은 날짜 시간값을 모두 보여주고 LocalDate는 날짜값만 보여준다

jshell> LocalTime now = LocalTime.now()
now ==> 17:16:21.099822300  
//LocalTime은 시간값만 보여주고 각각의 세부 내용은 이곳에 저장이 된다.
