                                                                                                                                                                                                    
Java New Features

Version              Release Data       Important New Features
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
J2SE 5.0             Sep 2004           Enhanced For Loop, Generics, Enums, Autoboxing
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Java SE 8 (LTS)      Mar 2014           Functional Programming - Lambdas & Streams, Static methods in interface
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Java SE 9            Sep 2017           Modularization (Java Platform Module System)
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Java SE 10           Mar 2018           Local Variable Type Inference
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Java SE 14           Mar 2020           Switch Expression (Preview in 12 and 13)
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Java SE 15           Sep 2020           Text Blocks (Preview in 13)
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Java SE 16           Mar 2021           Record Classes (Preview in 14 and 15)   
-------------------------------------------------------------------------------------------------------------------------------------------------------------
All Java Version     -                  API Improvements, Performance and Garbage Collection Improvements
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ                                                                                                                                                                                                    
                                                                                                                                                                                                    
                                                                                                                                                                                                    
                                                                                                                                                                                                    
                                                                                                                                                                                                    

이제 여러 업데이트에서 도입된 몇 가지 중요한 새 기능에 대해 살펴보겠다
• J2SE 5.0
자바의 중요한 첫 업데이트 버전으로는 J2SE 5.0이 있다 
향상된 For문, 제네릭, Enums, 오토박싱이 이 때 등장했다 
이 기능들은 다 이전 섹션에서 살펴봤었다, 모두 자바 5에서 도입됐다

• Java SE 8 (LTS)
다음 주요 업데이트는 Java 8이다 
교육자가 볼 때 이 업데이트는 가장 중요한 업데이트 중 하나라고 한다 
함수형 프로그래밍이 도입됐기 때문이라고
자바 8 이전에는 함수형 프로그래밍이 없었다 람다나 스트림 같은 건 할 수 없었다 
2014년 3월 Java 8을 통해 함수형 프로그래밍 기능, 람다와 스트림, 정적 참조 같은 기능들을 사용할 수 있엇다 
또 이 업데이트로 인터페이스에 정적 메소드도 도입되었다 인터페이스에서 노출되지 않는 메소드에 대한 메소드 정의 외에도 인터페이스에 정적 메소드 정의를 사용할 수 있게 됐다

• Java SE 9 
자바 SE 9도 중요한 업데이트이다
여기서 모듈화가 도입됐다 이후로 JDK 전체가 다중으로 모듈화가 된다 뿐만 아니라 어플리케이션을 모듈화된 방식으로 구축할 수 있게 됐다 
모듈화에 대해선 나중에 살펴보겠다 

• Java SE 10
그 다음 주요 기능은 2010년에 도입된 지역 변수 자료형 추론이다 
프로그램을 짤 때는 메소드 안에 많은 지역 변수들을 만들곤 한다 
종종 변수 선언, 특정 변수에 대한 형식 선언이 매우 복잡해질 때가 있다 Java 10을 사용하면 자바가 이를 간소화해준다
자바는 지역 변수의 유형을 자동으로 유추할 수 있는데, 이에 대한 자세한 내용은 나중에 살펴보도록 하겠다 

• Java SE 14  
다음 주요 기능은 switch 표현식이다 이전 섹션에서 switch 문 학습을 한 적이 있다
Java 14부터는 음성을 문장으로 사용할 뿐만 아니라 switch를 표현식으로 사용할 수도 있다 이것의 장점은 무엇일까? 
나중에 살펴보도록 하겠다 

• Java SE 15
다음 주요 기능은 텍스트 블록이다 
자바로 복잡한 텍스트를 작성한다고 해 보자 다중 줄, 이중 코드, 단일 코드, 특수 문자 등등
몹시 어려운 작업이다 하지만 텍스트 블록을 사용하면 간단해진다 
이 기능은 자바 15에서 도입되었다 

• Java SE 16 
주요 기능은 레코드 클래스이다 
지난 섹션들을 거치면서 자바 빈을 여러 번 만들어봤다 예시로 customer bean이 있다
	private String name;
	private Address homeAddress;
	private Address workAddress;
이 customer 빈이 멤버 변수를 3개 생성한다고 해보자
	
public Customer(String name, Address homeAddress) {
		this.name = name;
		this.homeAddress = homeAddress;
	}
생성자를 만들어야 할 거고
	public Address getHomeAddress() {
		return homeAddress;
	}
	
	public void setHomeAddress(Address homeAddress) { //주소가 바뀐다면 setHomeAd를 통해 변경할 수 있고
		this.homeAddress = homeAddress;
	}
..
...
	public String toString() {
		return String.format("name - [%s] home address - [%s] work address - [%s])", 
							name, homeAddress, workAddress);
	}

getter,setter toString 메소드도 필요하고 해시코드와 equals 메소드고 구현해야 한다 
대부분의 빈에서 이런 작업을 해야하는데 

자바 16에선 레코드 클래스가 도입되어서 이런 클래스들을 만드는 게 훨씬 쉬워진다 
코드 세 줄로 모든 클래스를 이렇게 만들 수 있다 레코드 클래스도 나중에 다루겠다 (Spring Framework에.. 이미 배운부분)

• All Java Version
이런 매 업데이트의 개선된 기능 외에도 새로운 API를 도입한 메소드들이 있다
그리고 대부분의 버전에서 가비지 컬렉션 성능이 향상되었다 

		Address homeAddress = new Address("line 1","Seoul","123"); 
		Customer customer = new Customer("Byul",homeAddress);
		
		Address workAddress = new Address("line 1 for work","Seoul","12311");
		customer.setWorkAddress(workAddress);
		
		System.out.println(customer);
프로그램에서 여러 객체를 만들고 나서 해당 객체에 대한 참조가 더 이상 유효하지 않으면 자바에서 자동으로 정리해주는데 
자바는 이 가비지 컬렉션을 수행하기 위해 많은 알고리즘을 사용한다 

그간의 자바 업데이트에서는 가비지 컬렉션 수행을 위한 많은 개선 사항이 있었다
따라서 대부분의 자바 버전에 가비지 컬렉션 성능에 관련된 크고 작은 변경 사항이 있는 것을 볼 수 있을 것이다




이번 강의 목표는 자바의 지난 버전과 최신 버전들에 추가된 
주요 신기능에 대한 고급 개요를 전달하는 것이었다 
