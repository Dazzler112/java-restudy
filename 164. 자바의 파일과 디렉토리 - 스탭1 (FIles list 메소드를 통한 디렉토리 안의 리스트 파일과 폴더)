

파일에 관한 짧은 학습이다 
이부분에선 파일의 목록이 디렉토리 안에 포함되는 것에 대한 이해와, 
디렉토리에서 파일을 찾는 방법, 그리고 파일로 부터 텍스트를 읽어내는 방법과 파일에 내용을 적는 방법에 대해 알아보겠다

이번 단계에선, 가장 기본적인 것으로 시작해 보도록 하겠다
특정한 디렉토리를 가져와서 안에 들어 있는 모든 요소의 리스트를 뽑아보도록 하겠다

새로운 자바 프로젝트만든(프로젝트명 files) 후 폴더를 만들고 폴더명은 resources라 하고 files프로젝트에 클래스를 만들겠다(클래스명 DirectoryScanRunner)


---------------------------------------------------------------------------------------------


🔵 DirectoryScanRunner 클래스파일


package files;

import java.io.*;
import java.nio.file.*;

public class DirectoryScanRunner {
	
	//그리고 여기서 이 프로젝트를 실행할 때, "."이 이를 매핑하도록 해준다 
	//즉, "."를 적어주면 이게 현재 디렉토리가 되고, 이게 특정 디렉토리의 구조와 맞게 되는것이다
	//그러므로 이 프로젝트에선 "."을 찍어서 디렉토리를 조회한다면, 이것을 뜻하게 된다
	//그러므로 src 이쪽으로 와서 현존하는 파일들을 모두 뽑아오고 싶다고 해보겠다
	//sts를 사용하고 있으므로, 이를 실행하고 나면 디렉토리에 몇 개의 파일들이 현재 들어있는 것을 확인할 수 있다
	//여기 이 특정한 과정에 어떤 파일들이 있는지 알아보도록 하자 시작해 보겠다
	public static void main(String[] args) throws IOException {
		
		//가장 먼저, 현재 디렉토리에 무엇이 현존하고 있는지 찾아내고 싶다고 해보겠다
		//자바7 이전에는 이 작업을 수행하기가 무척 복잡했다 그러나 자바7이 소개되고, 자바8에서 함수형 프로그래밍이 소개되면서 이런 작업이 매우 간편해졌다
		//그러므로 이 섹션에선 함수형 프로그래밍 컨셉을 사용하여 파일들을 스캔하고, 디렉토리를 스캔하는 작업을 해보겠다
		
		//여기서 우리는 특정한 디렉토리로 가는 방향을 찾으려고 한다//그러므로 여기서 path는 특정한 디렉토리에 들어갈 수 있도록 도와준다
		//그러므로 여기에 'Paths'를 import로 불러와 주면 java.nio라는 패키지에 존재한다는 것이 확인 가능하다
		//NIO는 New IO의 줄임말로, 왜 Java New IO라고 불리는지는 잘 모르겠지만, 이미 자바 7에서 소개되어 지금 자바 9까지 나온 상태이니 더이상 새로운 내용은 아니다 걱정할 필요 X
		//이 path로부터 파일의 목록을 추출해 읽어보는 것이 이 작업의 목적이다 그러려면 어떻게 해야 할까?
		//Files클래스에는 list()라는 메소드가 있는데 보다시피 list가 path를 허용하면 Stream이 반환 된다 ( list(Path dir) : Stream<Path> )
		/* File.list() 살펴보기...
		  * @since   1.8
		public static Stream<Path> list(Path dir) throws IOException {
        DirectoryStream<Path> ds = Files.newDirectoryStream(dir);
        File.list를 살펴보면, 새로운 메소드가 있고 이는 자바 8에서 소개됐다고 나온다 또 설명글 중에  * Return a lazily populated {@code Stream} stream을 반환한다고 적혀있다
        여기 요소들이 디렉토리에서 입력값에 해당한다는 내용도 적혀있다 그리고 가장 중요한 것은 listing이 재귀가 아니라는 점이다 이런 의미에서 listing은 현재 디렉토리를 반환할 뿐, 
        현재의 디렉토리 아래 존재하는 디렉토리를 반환하는 것이 아니다 
		*/
		//그럼 이제 path를 여기 사용해 보겠다 Files.list()를 적어주면 이 코드는 stream을 반환한다 그리고 이 stream에 모든 내용을 출력하려 한다 어떻게 이것이 가능할까??
		//forEach()를 적고, 너의 소비자를 정의해 줘라 여기서 method reference를 사용하겠다(System.out::println)
		//그리고 Files.list(Paths.get("."))에서 예외가 나올건대 중요한 것 중 하나가 예외를 다루는 것이었지? 폴더가 존재하지 않는 것과 같은 일이 발생할 확률이 있으니
		//ctrl + 1 그래서 IOException이라는 예외를 처리해야 하는 일이 생긴다 Ctrl+1을 눌러 'Add throws' 선택지를 눌러 throws를 추가해 주도록 하자 //그리고 실행해주자!
		Files.list(Paths.get(".")).forEach(System.out::println);
		/* 출력결과 ==>
		.\.classpath
		.\.project
		.\.settings
		.\bin
		.\resources
		.\src
		보다시피 출력된 값들을 확인할 수 있다 .\.classpath .\.project 가 이클립스에 의해 생성되었고,.\bin에는 컴파일된 모든 클래스 파일들이 저장되어 있다 그리고 .\resources폴더가 생성되었고,.\src라는 폴더 또한 생겼다
		지금까지 소개한 것들이 모든 폴더들이다 Files를 열어보면 이 안에 모든 것들이 있다는 사실을 확인할 수 있다
		*/ 
	}
}

---------------------------------------------------------------------------------------------




/*
다음 단계는 몇 개의 연산자들을 더 배워보고 search와 같은 것들에 대해 배워보도록 하겠다
*/
