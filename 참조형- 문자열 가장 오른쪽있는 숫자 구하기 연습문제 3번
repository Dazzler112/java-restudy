
코딩 예제: 문자열의 가장 오른쪽에 있는 숫자 구하기
여러분의 과제는 StringMagic클래스 안에서 getRightmostDigit메서드를 완성하는 것입니다. 
이 메서드는 문자열을 인수로 받고 문자열의 가장 오른쪽에 있는 숫자를 리턴해야 합니다.

지침

1. getRightmostDigit메서드는 문자열 str을 인수로 받습니다. 이 문자열에는 숫자, 글자, 특수문자 등 모든 문자가 담길 수 있습니다.
2. 여러분의 과제는 문자열을 오른쪽부터 왼쪽으로 반복하여 각 문자를 검사하여 그것이 숫자인지 확인하는 것입니다.
3. 숫자를 만나면 즉시 그것을 정수로서 리턴해야 합니다.
숫자는 문자열에서 문자로 표현되어 있으므로 그것을 리턴하기 전에 정수로 변환해야 한다는 점에 주의하시기 바랍니다.
4. 문자열에 있는 모든 문자를 검사했지만 숫자를 찾지 못했다면 -1을 리턴해야 합니다.
5. 엣지 케이스: 문자열이 비어 있는 경우에도 -1을 리턴해야 합니다.

Java의 Character클래스에 있는 유용한 메서드를 몇 개 소개해 드립니다.

• Character.isDigit(c): 이 메서드는 문자 c를 인수로 받아서 만일 c가 숫자(0~9)이면 true를 리턴하고 그렇지 않으면 false를 리턴합니다.
• Character.getNumericValue(c): 이 메서드는 문자 c를 인수로 받고 만일 그것이 숫자이면 c의 숫자 값을 리턴합니다. 
만일 c가 숫자가 아니면 이 메서드는 숫자가 아닌 값을 리턴합니다(우리는 숫자에만 관심이 있으므로 그 값은 이 문제에서 무시할 수 있습니다).

예시
다음은 이 문제를 설명하기 위한 몇 가지 예입니다.
만일 입력 문자열이 "I bought 5 apples, 4 bananas, and 3 oranges"라면 메서드는 3을 리턴해야 합니다. 
왜냐면 3은 문자열의 맨 오른쪽에 있는 숫자이기 때문입니다.
만일 입력 문자열이 "There are no numbers in this string"이라면 메서드는 -1을 리턴해야 합니다. 
왜냐면 문자열에 숫자가 없기 때문입니다.

다음은 기본 코드입니다.

public class StringMagic {

    /**
     * This method finds the rightmost digit in a given string.
     *
     * @param str The string to find the rightmost digit in.
     * @return The rightmost digit in the string. If no digit is found, return -1.
     */
    public int getRightmostDigit(String str) {

        // TODO: Write your code here
        
    }
}

//주어진 코드로 완성하시오








--------------------------------------------------------------------------------------------------------









힌트












다음은 문제 풀이에 도움이 되는 간단한 힌트들입니다.

1. 문제 이해하기: 여러분은 문자열의 가장 오른쪽에 있는 숫자를 찾아야 합니다. 
즉 여러분은 문자열에서 오른쪽부터 왼쪽으로 문자들을 검사해야 할 것입니다.

2. 엣지 케이스 처리하기: 반복을 시작하기 전에 문자열이 비어 있는지 검사합니다. 
만일 그렇다면 맨 오른쪽에 숫자가 없으므로 -1을 리턴해야 합니다.

3. 문자열 반복하기: 오른쪽부터 시작하기 위해서는 반복 변수를 문자열의 마지막 인덱스로 초기화합니다(str.length() - 1). 
0(첫 번째 인덱스)에 도달할 때까지 매번 반복할 때마다 이 변수를 줄입니다.

4. 숫자인지 검사하기: 매번 반복할 때마다 Character.isDigit(char)를 사용하여 현재의 문자가 숫자인지 검사합니다. 
만일 숫자라면 Character.getNumericValue(char)를 사용하여 그것의 숫자 값을 리턴합니다.

5. 숫자를 발견하지 못한 경우: 반복문이 완료되었지만 숫자를 발견하지 못한 경우, 반복을 마친 후 -1을 리턴합니다. 
그 이유는 문제의 요구사항에 따라, 문자열 전체에서 숫자를 발견하지 못하면 -1을 리턴해야 하기 때문입니다.

오른쪽부터 왼쪽으로 검사할 때 가장 먼저 만나게 된 숫자가 가장 오른쪽에 있는 숫자임을 기억하십시오. 
그 숫자를 찾았으면 검색을 중단하고 그 숫자를 리턴할 수 있습니다.

--------------------------------------------------------------------------------------------------------










--------------------------------------------------------------------------------------------------------














해답)



















public class StringMagic {

    public int getRightmostDigit(String str) {

        //1. 일단 에지케이스로 문자열 비어있거나 null일경우 먼저 만들기
        if ( str == null || str.equals("") ) {
            return -1;
        }
        //2.그다음 반복문 생성
        //"I bought 5 apples, 4 bananas, and 3 oranges"  //문자열을 왼쪽에서 오른쪽으로 스캔하면 숫자를 마주하더라도 그것이 올바른지 알수 없다. 
        //따라서 문자열을 오른쪽으로 계속 스캔하고 끝까지 이동한다음 마지막 숫자가 무엇인지 추적해야한다.
        //하지만 순서를 반대로 해서 오른쪽에서 왼쪽으로 스캔한다면 즉 oranges부터 시작해서 3을 향해간다면 가장 먼저 찾을수 있는 첫번째 숫자가 바로 되돌아갈 수 있는 숫자가 될것이다. 
        //따라서 우리가 할 일은 문자열을 오른쪽에서 왼쪽으로 반복하는 것이다.
        //가장 오른쪽 문자 인덱스는 무엇일까? 이 문자열의 길이이다 //length -1 to 0
        //"I bought 5 apples, 4 bananas, and 3 oranges"이문자 부터 시작해서 0까지 반복한다. 그리고 어떤 숫자를 찾으면 즉시 다시 반환할 수 있다.

        //지역변수 만들고 길이는 str.length와 같게 만들어 보자
        int length = str.length();
        for(int i = length-1; i >= 0; i--){
            //문자인지, 문자점이 숫자인지 확인해야 한다.
            char ch = str.charAt(i);//실제로 문자를 가져와야한다.
            if( Character.isDigit(ch) ) {  //숫자인 문자를 찾으면 ?
                return Character.getNumberValue(ch);  //그 숫자값을 다시 반환한다.
            }
        }
        return -1; //숫자를 찾지 못하면 실제로 -1을 반환한다.
    }
}

--------------------------------------------------------------------------------------------------------
