
Java 코딩 예제 – 도형과 면적

이번 예제에서 여러분에게는 일부 완성된 Java 프로그램이 제공됩니다. 
이 프로그램은 도형을 생성하고 면적을 계산하며 그 도형에 대한 정보를 프린트합니다.
이 프로그램은 구체적인 도형 유형에 대한 서브클래스가 있는 추상 베이스 클래스인 Shape를 정의합니다.
모든 도형은 면적을 계산할 수 있어야 합니다.
이 예제에서 우리가 고려하는 모양은 Circle과 Rectangle입니다.
여러분의 과제는 Shape추상 클래스를 확장하는 클래스인 Circle과 Rectangle을 구현하여 코드를 완성하는 것입니다.
그 모든 클래스에는 반드시 도형의 면적을 계산하고 리턴하는 calculateArea() 메서드가 있어야 합니다.

• 엣지 케이스
원의 반지름과 직사각형의 길이와 폭은 양수여야 합니다. 
여러분은 그 입력값들이 양수라고 가정할 수 있습니다.

• 입력 형식
입력값은 도형의 치수가 되고, 인스턴스를 생성할 때 해당되는 생성자에게 전달될 것입니다. 
원의 경우, 반지름이 입력값이고 직사각형의 경우 길이와 폭이 입력값입니다.

다음은 예시입니다.
Shape circle = new Circle("Circle", 5.0); // Here, "Circle" is the name and 5.0 is the radius
Shape rectangle = new Rectangle("Rectangle", 4.0, 6.0); // Here, "Rectangle" is the name, 4.0 is the length, and 6.0 is the width

• 공식
1. 원의 면적 - Math.PI * radius * radius.
2. 직사각형의 면적 - length * width.

• 참고사항
이번 예제에서 우리는 상속과 추상 클래스를 사용합니다. 
Shape클래스는 추상 클래스이며, Circle과 Rectangle클래스에 의해 확장됩니다.

‣ super(name)을 사용하여 수퍼클래스 Shape의 생성자를 호출합니다.
이 구문은 Circle과 Rectangle의 생성자에서 첫 번째 구문으로 필요합니다.
‣ Math.PI는 PI 값을 나타내는 상수이며 대략 3.14159입니다.원의 면적을 계산하기 위해 사용합니다.
‣ calculateArea()는 Shape의 추상 메서드이며 Circle와 Rectangle클래스 안에서 (오버라이드되어) 구현됩니다.
‣ 키워드 this는 현재의 객체를 가리키며, 객체의 속성에 액세스하기 위해 사용합니다.

다음은 코드의 기본 뼈대입니다.
abstract class Shape {
    protected String name;

    public Shape(String name) {
        this.name = name;
    }

    public abstract double calculateArea();

    public void displayInfo() {
        System.out.println("Shape: " + name);
        System.out.println("Area: " + calculateArea());
    }
}

// TODO: Create a Circle class that extends Shape
// The Circle class should have a private double radius attribute and a constructor to initialize it
// It should also implement the calculateArea() method 

// TODO: Create a Rectangle class that extends Shape
// The Rectangle class should have private double attributes for length and width, and a constructor to initialize them
// It should also implement the calculateArea() method 

다음코드로 코드를 완성하시오














---------------------------------------------------------------------------------










힌트

















2.Circle 클래스

• Shape 클래스를 확장하는 Circle 클래스를 생성합니다.
• 원의 반지름을 나타내기 위해 타입 double인 프라이빗 속성 radius 를 추가합니다.
• name과 radius에 관한 매개변수를 받는 Circle 클래스의 생성자를 정의합니다. 
  super(name)을 사용하여 수퍼클래스 생성자를 호출해서 name을 설정합니다. 이어서 매개변수 radius의 값으로 속성 radius를 설정합니다.
• calculateArea() 메서드를 구현합니다. 원의 면적은 π * radius * radius로 계산됩니다.
  π 값은 Math.PI를 사용하십시오.

2. Rectangle 클래스

• Shape 클래스를 확장하는 Rectangle  클래스를 생성합니다.
• 직사각형의 길이와 폭을 나타내기 위해, 타입 double인 프라이빗 속성 length 및 width를 추가합니다.
• name, length, width에 관한 매개변수를 받는 Rectangle클래스의 생성자를 정의합니다. 
  super(name)을 사용하여 수퍼클래스 생성자를 호출해서 name을 설정합니다.  
  이어서 해당 매개변수의 값으로 속성 length와 width를 설정합니다.
• calculateArea() 메서드를 구현합니다. 직사각형의 면적은 length * width로 계산됩니다.

---------------------------------------------------------------------------------











---------------------------------------------------------------------------------













해답)




















abstract class Shape {
    protected String name;

    public Shape(String name) {
        this.name = name;
    }

    public abstract double calculateArea();

    public void displayInfo() {
        System.out.println("Shape: " + name);
        System.out.println("Area: " + calculateArea());
    }
}

//맨처음은 클래스들을 생성한다 (Circle , Rectangle)
//그다음은 생성자를 생성
class Circle extends Shape {
    private double radius; // 계산을 위해 변수를 생성
    
    public Circle (String name, double radius) { //생성자 생성
        super(name); //부모의 생성자 클래스를 호출
        this.radius = radius 
    }

    public double calculateArea() {//추상메소드 구현
        return Math.PI * radius * radius;
    }
    
}


class Rectangle extends Shape {
    private double length;   // 계산을 위해 변수를 생성
    private double width;    // 계산을 위해 변수를 생성
   
    public Rectangle (String name, double length, double width) { //생성자 생성
        super(name); //부모의 생성자 클래스를 호출
        this.length = length;
        this.width = width;
    }

    public double calculateArea() {//추상메소드 구현
        return length * width;
    }
}

---------------------------------------------------------------------------------

/*
이번 실습에 중요한 것은 이것이다 
추상 클래스에 메소드를 넣을 수 있다는 것
실제 클래스에서 구현할 메소드를
모든 클래스에 넓이를 구하는 메소드를 원했다
모든 클래스에 calculateArea메소드를 넣길 원했다
그래서 추상 클래스를 만든 거고 그 안에서 명시한 건 이것이다 
이 메소드(public abstract double calculateArea();)는 구현 해야 한다고
그래서 이어지는 클래스들, 즉 Shape를 확장하는 클래스인 Circle 과 Rectangle에서 
calculateArea 메소드를 구현한 것이다
각 도형에서 자신의 넓이를 구하는 calculateArea메소드를 구현할 수 있다
*/
