
-----------------------------------------------------------------------------------------

퍼즐1번

package basicIfTraining;

public class Iftraining1 {
	
	public static void main(String[] args) {
		puzzle1();
	}
	
	private static void puzzle1() {
		int k = 15;
		if(k > 20) {
			System.out.println(1);
		} else if (k > 10) {
			System.out.println(2);
		} else if (k < 20) {
			System.out.println(3);
		} else {
			System.out.println(4);
		}
	}

}




//실행되는것은 2이다 2,3 둘다 해당 되지만 if문은 하나의 로직만 실행되기 때문에 2가 출력이 된다.
//이렇듯 nested if else는 딱 한 블록만 실행한다는것을 유의해야겠다.
-----------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------

퍼즐2

package basicIfTraining;

public class Iftraining1 {
	
	public static void main(String[] args) {
		puzzle2();
	}
	
	private static void puzzle2() {
		int l = 15;
		
		if(l < 20)
			System.out.println("l < 20");
		if(l > 20)
			System.out.println("l > 20");
		else
			System.out.println("Who am I");
	}

}





// System.out.println("l < 20"); 로직과 System.out.println("Who am I");로직이 실행이 된다
//블록이 없기때문에 독립적인 로직으로 1번과 3번이 실행이 되었다 (2번은 조건부터 맞지 않기 때문에 실행x)
//if문 사용시 {}를 반드시 해줘야 하고 늘 주의해야한다
-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------

퍼즐3


package basicIfTraining;

public class Iftraining1 {
	
	public static void main(String[] args) {
		puzzle3();
	}
	
	private static void puzzle3() {
		int m = 15;
		
		if(m > 20)
			if(m < 20)
				System.out.println("m > 20");
			else 
				System.out.println("Who am I?");

    }
}





//실행되지 않는다 사실은 저 로직은
//if(m > 20){
			if(m < 20)
				System.out.println("m > 20");
			else 
				System.out.println("Who am I?");
}
//이렇게 if문 안에 if가 들어있는 로직이나 다름이 없어서
//if(m > 20) 이 조건에서 만족하지 못하기 때문에 false로 되서 실행 되지 않는다.
//그래서 {} 중괄호 필요성이 있는것이다 이렇게 사용하면 구별하기(가독성)가 힘들기 때문에 반드시 {}중괄호 표시를 해줘야 한다.
-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------

퍼즐4

jshell> int i = 0;
i ==> 0

jshell> if(i){
   ...>     System.out.println("i");
   ...> }
|  Error:
|  incompatible types: int cannot be converted to boolean
|  if(i){
|     ^

//에러의 이유는 if문에 정수를 사용할수 없다 
//c언어나 c++의 경우 0보다 작으면 false를 0보다 큰값이면 true를 출력하지만 자바는 다르다

jshell> if(i=1){
   ...>     System.out.println("i");
   ...> }
|  Error:
|  incompatible types: int cannot be converted to boolean
|  if(i=1){
|     ^-^

//이 조건의 에러이유는 i =1이다 라는 대입식은 불가하다 if문은 반드시 조건이 와야한다.

jshell> if(i==1){
   ...>     System.out.println("i");
   ...> }
//차라리 이런식으로 =대입이 아닌 == 같을때 이런식의 조건을 사용해줘야 에러없이 쿼리가 실행된다.

-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------

퍼즐5


package basicIfTraining;

public class Iftraining1 {
	
	public static void main(String[] args) {
		puzzle5();
	}
	
	private static void puzzle5() {
		int number = 5;
		
		if(number < 0)
			number = number + 10;
			number++;
			System.out.println(number);
	}

}





//후입연산자가 실행된다
//이유는 if조건은 로직 1줄만 실행된다 사실상 if(number < 0) 이조건이 해당하지 않으니
//number = number + 10; 이 로직은 실행안되고
//number++; 와 System.out.println(number); 이로직은 if문에 해당하는 로직이 아닌 전혀 다른 로직이기 때문에 
//이둘이 실행된다 결론은 6이 실행됨 여기서도 {}중괄호를 사용해 줘야 가독성이 좋겠다.
-----------------------------------------------------------------------------------------



⁂if문 사용시 if조건에 중괄호{}를 사용해주자 중괄호 사용해주지 않으면 가독성에 좋지 않기때문에 사용해주는게 다른 팀원들도 그렇고
알아보기 쉽다.
