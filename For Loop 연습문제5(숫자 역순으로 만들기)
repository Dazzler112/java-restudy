
코딩 예제: 숫자 역순으로 만들기
이번 예제에서 여러분은 NumberUtils클래스 안에서 reverseNumber메서드를 완성해야 합니다.

이 메서드는 정수를 입력값으로 받고 그 숫자의 역순 숫자를 리턴합니다. 
예를 들어 입력값이 123이면 이 메서드는 321을 리턴하게 됩니다.

이 메서드는 다음과 같은 두 가지 엣지 케이스를 처리합니다.

• 입력값이 0일 경우, 0을 거꾸로 하면 0이므로 메서드는 0을 리턴합니다.

• 입력값이 음수일 경우, 음수의 역순 숫자는 정의되지 않으므로 메서드는 -1을 리턴합니다.
 reverseNumber메서드의 시그니처는 다음과 같습니다.
public int reverseNumber(int number)
여러분은 위에 설명한 동작 대로 작동하는 이 메서드의 구현물을 제공하게 됩니다.

해답의 단서
숫자를 역순으로 만들기 위해 여러분은 반복적으로 마지막 자릿수를 추출하고 그걸 역순 숫자에 추가할 수 있습니다.
여러분은 나머지 연산자 %를 써서 마지막 자릿수를 얻고(예, number % 10를 쓰면 마지막 자릿수가 나옵니다) 
정수 나누기 / 를 사용하여 그 숫자의 마지막 자릿수를 제거할 수 있습니다(예, number /= 10).



기본 로직

public class NumberUtils {

    public int reverseNumber(int number) {

    }
}
//다음의 로직으로 숫자가 역순으로 나오게 작성하시오.








--------------------------------------------------------------------------------------





힌트)










다음은 여러분이 과제를 해결하는 데 도움이 되는 몇 가지 힌트입니다.

1. reversedNumber를 0으로 초기화합니다.

2. 엣지 케이스: 먼저 엣지 케이스를 처리합니다. 숫자가 0이라면 0을 리턴합니다. 숫자가 음수라면 -1을 리턴합니다.

3. 숫자가 0이 될 때까지 반복: 숫자가 0이 될 때까지 프로세스를 반복하는 while 반복문을 작성합니다.

4. 마지막 자릿수 추출: 반복문 안에서 나머지 연산자 %를 사용하여 그 숫자의 마지막 자릿수를 추출합니다. 
예를 들어 number % 10이라고 하면 마지막 자릿수가 나올 것입니다.

5. 역순 숫자를 업데이트: 현재의 역순 숫자에 10을 곱한 후 역순 숫자에 마지막 자릿수를 더합니다. 
다음과 같이 할 수 있습니다. reversedNumber = reversedNumber * 10 + lastDigit

6. 마지막 자릿수를 제거: 원래의 숫자에서 마지막 자릿수를 제겅합니다. number = number /= 10과 같이 정수 나누기를 하면 됩니다.

7. 2단계부터 계속합니다.

8. 역순 숫자를 리턴: 반복문이 완료되면(즉 숫자가 0이 되면) 역순 숫자를 리턴합니다.
연습이 완벽을 만든다는 사실을 기억하십시오. 계속 시도해 보세요!



--------------------------------------------------------------------------------------


























--------------------------------------------------------------------------------------










해답)


















public class NumberUtils {

    
    public int reverseNumber(int number) {
        if(number == 0) {
            return 0;
        }
        if(number <0) {
            return -1;
        }

        // 456 이숫자를 10으로 나눈다음, 이 특정 숫자의 10을 10으로 나눈다면 어떤 결과가 나올까?
        // mod 10 , div 10
        // 6 6이 나온다 (10으로 나누면 나머지는 6이기 때문 그다음 할수있는것은 10으로 나누는 것이다) 그러면 45가나옴 이런식으로 수를 구할수 있겠다.
        // 5( 그리고 10을 곱하면 5가된다) 그리고 1045를 10으로 나누면 4가나옴
        // 4, 0
        // 654 (우리가 원하는 답)
        int reversedNumber = 0; //2.값을 저장할 변수를 만들어줘야함
        
        while(number > 0){ //0보다 클경우 어떻게 해야하나
            int digit = number % 10;  //1. 자릿수를 계산해야 한다
            reversedNumber = reversedNumber *10 + digit; //3.반전된 숫자의 이전값을 10으로 반전시켜 줘야한다. (reversedNumber *10)에서 0이 되고  + digit 시 6이 들어올것 그다음 5....4 이런식으로 수가 들어감)
            number /= 10; //10으로 나눠야 한다
            System.out.format("digit-%d number-%d reversedNumber-%d", digit, number, reversedNumber).println();// 이것을 집어넣으면 결과창 user logs에 어떻게 진행되는지 알수 있다.
        }
         return reversedNumber;
    }
}

--------------------------------------------------------------------------------------
