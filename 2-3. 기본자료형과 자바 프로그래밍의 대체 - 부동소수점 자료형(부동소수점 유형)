34.5
$51 ==> 34.5

34.56789
$52 ==> 34.56789

자바에 부동소숫값을 담는 데이터 유형은 두가지가 있다.
double유형과 float유형이다.
기본 부동 소수 리터럴은 double 유형이다.
그래서 

float f = 34.5
error

f= 34.5를 입력해도 에러가 날 수 밖에 없다. 프로그램이 double로 인식해 float 형에 담는것을 거부한다.

why?
float유형의 크기는 4바이트이고 double유형은 8바이트이기 때문이다.
정수 데이터 유형을 다룰 때 나온 법칙이 부동소수점 데이터 유형에 역시 적용되기 때문
큰 값을 작은값에 담을 수 없고 8바이트 double은 4바이트보다 커서 34.5를 float형에 담을 수 없다.

담는 방법은 
float f = 34.5f 또는 float f = 34.5F를 쓰면되고 이건 부동소수 리터럴 이다.
f ==> 34.5

double도 만들기 쉽다.
double dbl = 34.5678
dbl ==> 34.5678

어떤 부동소수 연산이던 결과는 항상 double이다.

float f2 = dbl
error
큰 값을 작은값에 넣을수 없다 이경우 explicit 형변환을 해야한다

float f2 = (float) dbl;
f2 ==> 34.5678
이제 double값을 float에 담을수 있다

그리고 나머지 사전/사후증감 나누기 더하기 곱하기 등등 다 부동소수 데이터 유형에도 사용가능하다

부동소수 데이터를 정수 데이터 유형으로 변환하는데

int i = f2
error
에러가 난다 f는 부동소수고 
부동소숫값은 정수 데이터 유형에 넣을 수 없다.
34.5678을 넣어도 정수에는 34만 들어가지 34.5는 들어갈수 없어서 explicit 형변환을 해야한다

int i = (int) f2
i ==> 34
34가 i에 들어갔다
34.5678 값의 끝이 잘리고 정수 부분만 i에 들어갔다

float f = i;
f==> 34.0
반면 float f = i;는 문제없는데
정수를 부동소수에 넣는것은 확장변환이기 때문에 괜찮다.

⁂ 정수는 부동소수에 들어가고
정수와 double의 관계도 이와 똑같다

다음 자료에선 double이나 float을 왜 쓰면 안 되는지 알아보겠다.
