
코딩 예제: 숫자의 자릿수 합계 계산하기

이번 예제에는 미완성된 Java 클래스 NumberUtils가 주어져 있습니다. 
이 클래스에는 지금 구현되지 않은 상태인 getSumOfDigits(int number)라는 메서드가 하나 있습니다.
여러분의 과제는 그 메서드의 구현을 완료하는 것입니다. 그 메서드는 다음과 같은 동작을 수행해야 합니다.
1. 주어진 숫자가 음수이면 메서드는 -1을 리턴해야 합니다. 음수의 자릿수 합계는 정의되지 않기 때문입니다.
2. 만일 주어진 숫자가 0이라면 메서드는 0을 리턴해야 합니다. 0의 자릿수 합계는 0이기 때문입니다.
3. 주어진 숫자가 양의 정수인 경우, 메서드는 그것의 자릿수를 합산하여 리턴해야 합니다.

결론적으로 말하자면, getSumOfDigits메서드는 모든 정수 입력값을 처리할 수 있어야 하고 
자릿수들의 합계를 리턴할 수 있어야 합니다(또는 음수인 경우 -1을 리턴). 
이 메서드는 0이 유효한 입력값임을 고려해야 하고, 그 경우에 0을 리턴해야 합니다. 0 의 자릿수 합계는 0이기 때문입니다. 


예시
문제 설명을 더 잘 이해하기 위해 몇 가지 예를 들어보겠습니다.

예 1:
• 주어진 숫자가 1234라고 가정합니다.
• 그 숫자의 자릿수 합계는 1 + 2 + 3 + 4 = 10입니다.
• 그러므로 만일 입력값이 1234라면 getSumOfDigits메서드는 10을 리턴해야 합니다.

예 2:
• 주어진 숫자가 0이라고 가정합니다.
• 0의 자릿수 합계는 0입니다.
• 그러므로 만일 입력값이 0이면 getSumOfDigits메서드는 0을 리턴해야 합니다.

예 3:
• 주어진 숫자가 -1234라고 가정합니다.
• 음수의 자릿수 합계는 정의되지 않았습니다.
• 그러므로 만일 입력값이 -1234라면 getSumOfDigits메서드는 -1을 리턴해야 합니다.

예 4:
• 주어진 숫자가 999라고 가정합니다.
• 999의 자릿수 합계는 9 + 9 + 9 = 27입니다.
• 그러므로 만일 입력값이 999라면 getSumOfDigits메서드는 27을 리턴해야 합니다.

과제

여러분의 과제는 NumberUtils 클래스 안에서 getSumOfDigits(int number) 메서드를 구현하는 것입니다.
• getSumOfDigits(int number) – 이 메서드는 하나의 매개변수 number(정수)를 받고 그 숫자의 자릿수 합계를 리턴해야 합니다. 
  만일 입력값이 음수라면 -1을 리턴해야 합니다. 만일 입력값이 0이라면 0을 리턴해야 합니다.



다음은 여러분이 완성할 NumberUtils 클래스의 기본 골격입니다.

public class NumberUtils {
 
    public int getSumOfDigits(int number) {
        // Write your code here
    }
}
//다음 과제를 이용하여 코드를 작성하시오.






---------------------------------------------------------------------------------------------------








힌트)







1. 먼저 입력값이 0 또는 음수인 엣지 케이스를 처리합니다. 만일 숫자가 0이라면 0을 리턴합니다. 만일 숫자가 음수라면 -1을 리턴합니다.

2. 양수의 자릿수 합계를 계산하기 위해 그 숫자가 0이 될 때까지 계속되는 반복문이 필요할 것입니다.

3. 매번 반복할 때마다 나머지 연산자 %를 사용하여 그 숫자의 마지막 자릿수를 구합니다. 
number % 10이라고 식을 쓰면 숫자의 마지막 자릿수가 나옵니다.

4. 마지막 자릿수를 합계에 더합니다.

5. 숫자를 10으로 나누어서 그 숫자의 마지막 자릿수를 제거합니다. number /= 10이라고 식을 쓰면 숫자의 마지막 자릿수가 제거됩니다.

6. 숫자가 0이 될 때까지 이 과정을 계속합니다.

7. 마지막으로 자릿수 합계를 리턴합니다.

---------------------------------------------------------------------------------------------------












---------------------------------------------------------------------------------------------------












해답)















public class NumberUtils {

    public int getSumOfDigits(int number) {
        
        if(number < 0) {
            return -1;
        }
        if (number == 0) {
            return 0;
        }

        //1234 숫자 1234라고 가정 그럼 어떻게 해야할까? 각 숫자를 찾아서 합산해야한다 (어떻게 각 숫자를 찾을까?)
        //마지막 숫자 찾을때는 1234 % 10 (모드 10을 했다) =4 //3은 어떻게 얻을수 있을까?, 123 % 10 = 3, 12 % 10 = 2, 1 % 10 = 1 여기서 = 값을 다 더하면 10이나온다
        //그렇다면 이 로직을 어떻게 구현할까?
          //가장 먼저 할 일은 실제로 모드 10을 수행하는 것 //mod 10
          //그래서 해야할 일은 10을 나누는 것이다 //div 10
        //이 두가지를 루프에서 실행해야 한다.
        //LOOP 숫자가 0이 될 때까지 이 주위를 돌아야 한다.
        int sumOfDigits = 0;
        while(number > 0){ //0보다 작아야할것 같지만 0보다 크다
            int digit = number % 10; //가장 먼저 해야할 일은 mod10을 하는것이다. 그럼 나머지가 나오겠지?
            sumOfDigits += digit; //그다음 숫자 더하기를 해줘야함 //따라서 숫자의 합에 숫자를 더하고 1,2,3,4 123으로 줄여햐한다 어떻게 해야할까?
            number /= 10;          //숫자는 숫자를 10으로 나눈값과 같다 그러면 어떻게 될까?
          //루프가 처음 실행 될 때(while(number != 0)) 숫자는 1,2,3,4가 될것이다.
          //(int digit = number % 10;)숫자의 값은 1,2,3,4,10을 곱한 값인 4가된다. ,3 , 2 ,1
          //그리고 일부 숫자도 4가 될것이다(sumOfDigits += digit;) 4, 7 , 9 ,10
          //그리고 숫자는 10으로 나뉘게 된다 (number /= 10; ) ///따라서 숫자는 1,2,3,4에 mod10을 하면 1,2,3이된다 , 12 ,1, 0
          //그리고 다시 (while(number != 0))이곳으로 오고 숫자가 1,2,3이된다
        }
            return sumOfDigits;  //그리고 여기로와서 마지막으로 자릿수의 합을 다시 반환한다.
    }
}


---------------------------------------------------------------------------------------------------
