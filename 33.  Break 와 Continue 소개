
 break and continue

 예시)

 jshell> for(i=1;i<=10;i++) {
   ...>     if(i == 5)
   ...>     break;
   ...>     System.out.print(i + " ");
   ...> }
1 2 3 4

여기서 break문이 하는것은, 이 반복문이 실행되는 동안
조건인(i == 5)를 확인하는것이다.
조건이 일치한다면 그후 반복문 밖으로 나가게 되는것이다.
그후 반복문 밖으로 나가게 되는것이다.

jshell> for(i=1;i<=10;i++) {
   ...>     if(i%2==0)
   ...>     break;
   ...>     System.out.print(i + " ");
   ...> }
1
//i값이 2이니 반복문에서 나가기 때문에 1만 출력된다
//조건이 일치하면 반복문을 벗어나게 된다

또 다른 키워드는 continue이다.

jshell> for(i=1;i<=10;i++) {
   ...>     if(i%2==0)
   ...>     continue;         //break대신 continue를 넣어봄
   ...>     System.out.print(i + " ");
   ...> }

이것의 출력값은 어떻게 될까?

1 3 5 7 9

//continue문의 기능은, 반복문은 밖으로 나가진 않지만
//다음 반복문으로 넘어가게 된다.
//밑에 있는 코드(   ...>     System.out.print(i + " ");)를 생략하게 되는것이다.

//   ...>     if(i%2==0) 의  continue문을 실행한다고 하면 짝수에 한해서
//   ...>     System.out.print(i + " "); 여기 다음 코드를 뛰어넘게 되는것이다
//그러면 어떻게 될까? continue문은 바로 다음 반복문을 실행한다.
//if(i%2==0)여기 i값은 생략되고 다음 i값으로 반복문이 실행되는 것이다

//break문과 continue문의 차이점은
//break문은 반복문 밖으로 나갈 수 있다. break문이 실행되는 순간 기존 반복문에서 벗어나게 되는것

//continue문은 반대로 반복문을 계속 실행하게 만든다 하지만 실행 후 나오는 코드를 전부 생략한다(ex)   ...>     System.out.print(i + " ");).
//i값이 2일경우(if(i%2==0)) 그 반복은 생략되고 i++가 실행된다 그럼 i값이 3인채 반복된다.

예문)
2 4 6 8 10 인 짝수가 출력되도록 만들기

jshell> for(i=1;i<=10;i++) {
   ...>     if(i%2 != 0)  //1.이러면 짝수가 출력된다 
   ...>     continue;
   ...>     System.out.print(i + " ");
   ...> }
2 4 6 8 10
//1-1.왜냐면 홀수일때는 continue문이 실행되기 때문에 홀수가 나오면 다음값으로 넘어가게 되고 짝수만 최종적으로 출력된다

//처음 break문과 continue문 만들때 조금 어렵게 느껴질 수 있고 그렇기 때문에 되도록 반복문 만들 때 최대한
break문과 continue문을 사용하지 않는걸 추천한다.
