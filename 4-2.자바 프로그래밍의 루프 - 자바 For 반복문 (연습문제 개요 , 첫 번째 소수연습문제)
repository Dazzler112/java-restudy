
----------------------------------------------------------------------------------------

클래스파일 1번

package forLoopTraining;

public class MyNumberRunner {
	
	public static void main(String[] args) {
		
		MyNumber number = new MyNumber(6);
		boolean isPrime =  number.isPrime();
		System.out.println("isPrime " + isPrime);
		
	}
}
//isPrime은 소숫값을 출력하게 해야하는 메소드임 어떻게 만들어야하나?

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

클래스파일 2번

package forLoopTraining;

public class MyNumber {

	private int number;

	public MyNumber(int number) {
		this.number = number;
	}

	public boolean isPrime() {
		//소수 2로 나눌수 없는것, -1까지
		//2 to number -1
		//How can check if a number is divisible by 2?
		
		if(number < 2) {
			return false;
		}
    //3. 이것의 용도는?
    //일단 if(number < 2) 쓰고 이게 맞다면 false를 출력
		//소수가 아니라고 표시되도록 모든 프로그램에서 항상 쓰는 함수이다.
		//이것을 Guard Condition이라고 하는데 메소드 전에 넣는 소스값이 유효한지 확인하는 절차
		//또 여기 있는 모든 조건을 한 번 확인해서 원하는 특정 값을 얻을 수 있도록,
		//정확한 함수를 사용하도록 하기 위함임
		//그래서 여기는 보면 만약 2보다 적은 숫자를 넣을 경우 false값이 나옴

  
		for(int i = 2; i <= number-1; i++) { //1.조건을 만들고
			if(number % 2 == 0) {             //2. 나머지가 0이나오는 조건이면 false를 출력 (실수가 아니라는뜻)
				return false;
			}
		}
		
		return true;                      //3.if조건에 걸리지 않으면 true를 리턴
	}
	
}

----------------------------------------------------------------------------------------
