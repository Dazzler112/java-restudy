

Java Modularization - Overview
                                                                                                                                                                    
● Introduced in Java 9                                                                                  ________________                                                            
● Goals :                                                                                              |    Module A    |                                                      
 ■ Modularize JDK (IMPORTANT)                                                                           ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                            
  ▢ rt.jar grew to 60+ MB by Java 8                                                                             |                                                    
 ■ Modularize Applications                                                                              ________________                                                            
● Modularizing JDK:                                                                                    |    Module B    |                                                      
 ■ java --list-modules                                                                                  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                                                                                                                                        
  ▢ java.base                                                                                               /       \                                                     
  ▢ java.logging                                                                              ________________      ________________                                                         
  ▢ java.sql                                                                                 |    Module C    |    |    Module D    |                                                       
  ▢ java.xml                                                                                  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                                
  ▢ jdk.compiler                                                                                                                                                                    
● java -d java.sql                                                                                                                                                                    
                                                                                                                                                                    
                                                                                                                                                                    
                                                                                                                                                                    
                                                                                                                                                                    
                                                                                                                                                                    
                                                                                                                                                                    
                                                                                                                                                                    
                                                                                                                                                                    
                                                                                                                                                                    
                                                                                                                                                                    
이번 단계에선 자바 모듈화라는 아주 중요한 신기능을 배워보겠다
● Introduced in Java 9
자바 모듈화는 자바 9에서 도입됐다 
● Goals :
 ■ Modularize JDK (IMPORTANT)
자바 모듈화의 주요 목표는 JDK를 모듈화하는 것이다 
  ▢ rt.jar grew to 60+ MB by Java 8
자바 8과 그 이전 버전들을 보면 rt.jar이라는 jar 파일이 있었다 runtime.jar의 준말이다 
이전의 자바버전에선 이게 작았다 그런데 자바 8로 넘어오면서 60 + MB로 늘어났다 
그리고 새 버전이 출시되고 신기능들이 도입되면서 rt.jar의 크기도 점점 커졌다 
대부분의 자바 프로그램들은 rt.jar의 모든 내용물이 필요하진 않는다 

예를 들어 일부 프로그램은 java.sql을 전혀 사용하지 않을 수도 있다 
즉 자바 9에선 JDK 전체가 모듈화되어있다는 것이다


---------------------------------
명령 프롬프트로 가서, 현재 내가 가진 버전을 체크해보겠다 
java -version을 입력하면

C:\Users\LG>java --version
java 17.0.6 2023-01-17 LTS
Java(TM) SE Runtime Environment (build 17.0.6+9-LTS-190)
Java HotSpot(TM) 64-Bit Server VM (build 17.0.6+9-LTS-190, mixed mode, sharing)
17버전이다 그리고 나서 java --list-modules를 입력해보면

java.base@17.0.6
java.compiler@17.0.6
java.datatransfer@17.0.6
java.desktop@17.0.6
java.instrument@17.0.6
java.logging@17.0.6
java.management@17.0.6
java.management.rmi@17.0.6
java.naming@17.0.6
java.net.http@17.0.6
java.prefs@17.0.6
java.rmi@17.0.6
java.scripting@17.0.6
java.se@17.0.6
java.security.jgss@17.0.6
java.security.sasl@17.0.6
java.smartcardio@17.0.6
java.sql@17.0.6
java.sql.rowset@17.0.6
java.transaction.xa@17.0.6
java.xml@17.0.6
java.xml.crypto@17.0.6
jdk.accessibility@17.0.6
jdk.attach@17.0.6
jdk.charsets@17.0.6
jdk.compiler@17.0.6
jdk.crypto.cryptoki@17.0.6
jdk.crypto.ec@17.0.6
jdk.crypto.mscapi@17.0.6
jdk.dynalink@17.0.6
jdk.editpad@17.0.6
jdk.hotspot.agent@17.0.6
jdk.httpserver@17.0.6
jdk.incubator.foreign@17.0.6
jdk.incubator.vector@17.0.6
jdk.internal.ed@17.0.6
jdk.internal.jvmstat@17.0.6
jdk.internal.le@17.0.6
jdk.internal.opt@17.0.6
jdk.internal.vm.ci@17.0.6
jdk.internal.vm.compiler@17.0.6
jdk.internal.vm.compiler.management@17.0.6
jdk.jartool@17.0.6
jdk.javadoc@17.0.6
jdk.jcmd@17.0.6
jdk.jconsole@17.0.6
jdk.jdeps@17.0.6
jdk.jdi@17.0.6
jdk.jdwp.agent@17.0.6
jdk.jfr@17.0.6
jdk.jlink@17.0.6
jdk.jpackage@17.0.6
jdk.jshell@17.0.6
jdk.jsobject@17.0.6
jdk.jstatd@17.0.6
jdk.localedata@17.0.6
jdk.management@17.0.6
jdk.management.agent@17.0.6
jdk.management.jfr@17.0.6
jdk.naming.dns@17.0.6
jdk.naming.rmi@17.0.6
jdk.net@17.0.6
jdk.nio.mapmode@17.0.6
jdk.random@17.0.6
jdk.sctp@17.0.6
jdk.security.auth@17.0.6
jdk.security.jgss@17.0.6
jdk.unsupported@17.0.6
jdk.unsupported.desktop@17.0.6
jdk.xml.dom@17.0.6
jdk.zipfs@17.0.6

이러면 여러 모듈들이 나열된다 JDK 전체가 수많은 모듈들로 모듈화된 걸 볼 수 있다
여기선 JDK 모듈과 자바 모듈까지 있다 
프로그램을 구축하면 어떤 모듈을 사용할지 선택할 수 있다
저렇게 JDK 전체를 쓸 필요는 없다 
이 모듈들만 이 리스트에서 사용하고 싶다, 라고 해도 되는것이다
---------------------------------

 ■ Modularize Applications
그다음 객체 역시 모듈화된 어플리케이션 구축에 쓰인다 
애플리케이션을 구축할 때는 특히 캡슐화와 관련해 어려운 점이 몇 개 있는데 
자바 9의 자바 모듈화를 통해 도입된 기능을 이용하면 보다 캡슐화되고 모듈화된 애플리케이션을 구축할 수 있다 

● Modularizing JDK: 
그럼 JDK 모듈화를 간단히 살펴보겠다
 ■ java --list-modules
앞서 Java --list-modules를 실행했을 때 봤듯이 여러 Java 모듈을 확인할 수 있었다 
  ▢ java.base 
  ▢ java.logging
  ▢ java.sql 
  ▢ java.xml
  ▢ jdk.compiler
  ▢ jdk.jartool
  ▢ jdk.jshell
일단 java base, 로깅을 사용할 거라면 java.logging도 추가하고 그게 아니라면 java.logging을 쓸 일은 없을 것이다
java.sql이랑 , java.xml도 마찬가지 이렇게 여러가지 모듈이 있어서 어떤 모듈을 사용할지 고를수 있다
jdk.compiler, jdk.jartool, jdk.jshell 까지 보다시피 이름이 java로 시작되는 이 모듈은 프로그래밍에 관련된 것들이다
그리고 jdk로 시작되는 것들은 일종의 도구라고 보면 된다 jdk.compiler는 자바 프로그램을 컴파일하는데 쓰고,
jdk.jartool은 jar 파일 구축하는 데, jdk.jshell은 jshell에 쓰는 모듈이다
많은 모듈들은 각각에 의존성을 가지고 있다 
자바의 모듈들을 살펴보면 java.base는 기초가 되는 모듈이다 대부분의 레이어 맨 아래에 깔리는 모듈이다 
모든 자바 프로그램은 java.base를 기본 모듈로 사용할 것이다 

● java -d java.sql       
아주 간단한 명령을 하나 수행해 보자

C:\Users\LG>java -d java.sql
java.sql@17.0.6
exports java.sql
exports javax.sql
requires java.xml transitive
requires java.logging transitive
requires java.base mandated
requires java.transaction.xa transitive
uses java.sql.Driver

보면 java.sql은 실행하려면 몇가지 다른 모듈을 요한다 
requires java.base mandated 이렇게 java.base를 요구하는 걸 확인할 수 있다 

요약하자면 java.sql은 java.base모듈이 필요하다는 것이다 
export 문들도 여럿 있다 이 패키지를 다른 모듈에도 가능하게 만든다는 내용이다







이번 학습은 자바 모듈화에 대한 빠른 개요를 해봤는데
모듈화에 관한 질문이 좀 있을 거라고 생각한다
다음 학습에는 실제로 어플리케이션을 모듈화하는 법을 배워보도록 하겠다 
샘플 어플리케이션을 사용할 것이다 
기존의 개발 방식이 무엇인지 살펴보고 모듈화가 도입된 지금 접근 방식을 어떻게 변화시킬지 알아보겠다 
