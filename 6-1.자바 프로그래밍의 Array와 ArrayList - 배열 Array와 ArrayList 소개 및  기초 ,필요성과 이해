
배열과 배열리스트

배열이 왜 필요한지 알아보고 배열에 가능한 연산이 어떤게 있는지 본후
배열 리스트에 대해 알아보자
배열리스트가 어떻게 일을 더 쉽게만드는지도 알아보자.


jshell> int mark1;
mark1 ==> 0

jshell> mark1 = 100;  //만점 받았다고 가정해 보자
mark1 ==> 100

jshell> int mark2 = 75  //mark2과목은 75점
mark2 ==> 75

jshell> int mark3 = 60;  //3은 60점
mark3 ==> 60

jshell> int sum = mark1 + mark2 + mark3;  //정수 합 구할때는 이렇게 하겠지?
sum ==> 235

//여기서 우리는 각각의 변수를 생성하고 있는것이다. 각각의 변수가 마크를 나타내고 있고
//점수의 합을 구할 때는 각각의 분명한 코드를 입력해 줬다.

//추가된 마크가 있다고 해보자 mark4라고 해보자
jshell> int mark4 = 56
mark4 ==> 56
//이렇게 변수를 생성한 후 총합을 구하고자 한다면 기존에 했던 더하기 식을 바꿔야 한다 mark4를 추가해야겠지?

jshell> int sum = mark1 + mark2 + mark3 + mark4;
sum ==> 291
//이렇게 하면 업데이트된 값이 출력된다. 제가 하나의 마크를 가질때, 두 개, 세 개의 마크를 가질때 총합이 달라진다.

//이런 상황에는 배열이 유용하게 사용된다!

//배열은, 같은 타입의 여러 값을 저장할 수 있다. 예를 들어,
int [] marks = {75,60,56} 입력시 하나의 세트로 저장 할 수 있다. (이 세가지 숫자를 한번에 저장할 수 있다)
세가지 요소를 가지는 배열 마크를 생성한 것이다.
jshell> int[] marks = {75, 60, 56};
marks ==> int[3] { 75, 60, 56 }

배열을 정의하고 안에 요소를 구성했다면 구성 요소를 차례대로 반복할 수 있는 반복문을 설정할 수 있다.
구성 요소가 세 개이든, 두 개이든, 네 개이든 상관없다
배열에 반복문을 설정하는 방법은 동일하다.

니가 이 배열을 반복 설정하여 합을 구하고자 할 때

먼저 
jshell> int sum = 0;
sum ==> 0
입력하여
간단한 더하기 변수를 생성했는데 이것을 'enhanced for loop'이라고 부른다.

jshell> for(int mark  : marks) {  //생성자 부분엔 위의 배열의 (타입 생성할변수명 : 사용한변수명) 
   ...>     sum = sum + mark;  //계산 식을 입력해주고
   ...> }

jshell> sum  //sum을 출력해 보면 합계가 나온다.
sum ==> 191

위의 'enhanced for loop' 코드가 편한 이유 중 하나는 구성 요소가 얼마나 많은지 관계없이
같은 코드를 사용할 수 있다는 것이다 요소가 10개든,100개든, 1000개든 상관없다.

//정리하자면, 배열을 통해 동일한 타입요소를 같은 개념으로 묶을 수 있다
{75, 60, 56} <== 여기 보이는 마크가 다 연관된 개념이라는 말이고 같은 타입이다.
이렇게 배열이라는 하나의 요소에 저장할 수 있다.

배열의 또 다른 장점은, 
 int sum = mark1 + mark2 + mark3 + mark4;
이런 식으로 코드를 적지 않아도 된다.
기존의 mark1+mark2+ 처럼 적고, 값이 추가되면 +mark3를 추가로 입력해야 했는데 
지금은 배열 안에 있는 요소의 합을 자동으로 구할 수 있는 코드를 입력할 수 있다.
배열이 가지는 요소의 수가 얼마나 많은지는 상관 없다.
