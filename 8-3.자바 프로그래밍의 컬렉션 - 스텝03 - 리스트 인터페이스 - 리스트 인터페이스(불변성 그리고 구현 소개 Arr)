
저번 학습에선, 간단한 리스트를 만들고 그에 들어있는 것들에 대한 새부 정보를 가지고 왔었다
이번에는 우리는 불변 리스트에 대한 것과 어떻게 가변 리스트를 만들 수 있을지에 대해 탐구하도록 하겠다

불변성과 가변성은 대체 무엇일까?
이것부터 시작하자

우리는 문자열 클래스가 불변이라 배웠다 BIgDecimal도 불변이라고 했었다 Wrapper 클래스 또한 불변이다
이건 무엇을 의미하는걸까?
무엇을 의미하냐면, 특정 클래스의 인스턴스를 만든 순간부터 이 값을 바꿀 수 없게 된다는 것이다
비슷하게 'of'함수를 사용해 만든 아무거나 List.of()던가 아니면 나중에 알아볼 Map.of()같은 것들로 만든 모든 것들은 불변 리스트다

jshell> List<String> words = List.of("Apple", "Bat", "Cat");
words ==> [Apple, Bat, Cat]
이제 이 리스트 안으로 들어가 보면 아무것도 추가할 수 없다.

그러면 words.add("Dog")라 하면 어떻게 될까?
jshell> words.add("Dog");
|  Exception java.lang.UnsupportedOperationException
|        at ImmutableCollections.uoe (ImmutableCollections.java:142)
|        at ImmutableCollections$AbstractImmutableCollection.add (ImmutableCollections.java:147)
|        at (#2:1)
거부된다 UnsupportedOperationException 예외를 던지면서 너가 하려는 것은 이 특정 리스트에선 지원되지 않는다는 것이다

이제, 가변 리스트를 만들고 싶다면 선택지로 있는 것들은 ArrayList를 만들던가 LinkedList를 만들거나 아니면 Vector를 만들 수 있다
궁금하겠지 ArrayList는 어떻게 만들 수 있을지 이 단어들을 기반으로 어떻게 LinkedList를 만들수  있는지 

만약 이 단어들로 ArrayList를 만들고 싶어한다면, 해야할 것은 새로운 List를 만들어야 한다
jshell> List<String> wordsArrayList = new ArrayList<String>(words);
wordsArrayList ==> [Apple, Bat, Cat]
이제 안의 값들을 변경할 수 있다 

비슷한 방식으로, wordsLinkedList라고 만든다 하면
jshell> List<String> wordsLinkedList = new LinkedList<String>(words);
wordsLinkedList ==> [Apple, Bat, Cat]

LinkedList와 비슷하게 Vector도 만들수 있다.
jshell> List<String> wordsVector = new Vector<String>(words);
wordsVector ==> [Apple, Bat, Cat]

ArrayList,LinkedList, Vectort를 만들때 대단한 것은 값을 추가할 수 있다는 것이다.

Dog를 추가하고 싶다
jshell> wordsArrayList.add("Dog");
$6 ==> true
ArrayList는 허용됨
jshell> wordsArrayList
wordsArrayList ==> [Apple, Bat, Cat, Dog]
끝에 Dog가 추가된 것을 볼수 있고 이와 비슷하게 wordsLinkedList와 wordsVector에도 값을 추가할 수 있다

그러면 언제 ArrayList, 언제 LinkedList, 언제 Vector를 써야 할까?
이것들 중 무엇을 어떻게 골라야 할까?

다른 질문으론 이 리스트들이 지원하는 다른 작업, 다른 변경 작업들이 무엇이 있을까?
우리는 .add에 대해 이야기해보았다 다른 작업들은 무엇이 있을까?
이런 것들은 다음 단계에 이야기해 보겠다 



/*
정리)
이번 학습에선 우리는 List.of()로 만든 모든 것은 불변 리스트란 것을 배웠다
내부 정보를 바꿀 수 없고 만약 가변 리스트를 만들고 싶다면 
ArrayList, LinkedList, Vector를 이 정보를 기반으로 만들어야 한다
우린 이것에 add메소드를 실행할 수 있는 것을 봤다
*/
